{"ast":null,"code":"import axios from 'axios';\nimport AuthService from '@/services/AuthService';\nconst API_URL = 'http://localhost:8080/users';\nclass UserService {\n  async getUsers() {\n    const token = AuthService.getToken();\n    return axios.get(API_URL, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  async getUserById(id) {\n    const token = AuthService.getToken();\n    return axios.get(`${API_URL}/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  async createUser(userData) {\n    const token = AuthService.getToken();\n    return axios.post(API_URL, userData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  async updateUser(id, userData) {\n    const token = AuthService.getToken();\n    return axios.put(`${API_URL}/${id}`, userData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  async deleteUser(id) {\n    const token = AuthService.getToken();\n    return axios.delete(`${API_URL}/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n}\nexport default new UserService();","map":{"version":3,"names":["axios","AuthService","API_URL","UserService","getUsers","token","getToken","get","headers","Authorization","getUserById","id","createUser","userData","post","updateUser","put","deleteUser","delete"],"sources":["C:/Users/Hedib/OneDrive/Bureau/hello-word-vue/src/services/UserService.js"],"sourcesContent":["import axios from 'axios';\nimport AuthService from '@/services/AuthService';\n\nconst API_URL = 'http://localhost:8080/users';\n\nclass UserService {\n  async getUsers() {\n    const token = AuthService.getToken();\n    return axios.get(API_URL, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n  async getUserById(id) {\n    const token = AuthService.getToken();\n    return axios.get(`${API_URL}/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n  async createUser(userData) {\n    const token = AuthService.getToken();\n    return axios.post(API_URL, userData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n  async updateUser(id, userData) {\n    const token = AuthService.getToken();\n    return axios.put(`${API_URL}/${id}`, userData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n  async deleteUser(id) {\n    const token = AuthService.getToken();\n    return axios.delete(`${API_URL}/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n}\n\nexport default new UserService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,wBAAwB;AAEhD,MAAMC,OAAO,GAAG,6BAA6B;AAE7C,MAAMC,WAAW,CAAC;EAChB,MAAMC,QAAQA,CAAA,EAAG;IACf,MAAMC,KAAK,GAAGJ,WAAW,CAACK,QAAQ,CAAC,CAAC;IACpC,OAAON,KAAK,CAACO,GAAG,CAACL,OAAO,EAAE;MACxBM,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;EACJ;EAEA,MAAMK,WAAWA,CAACC,EAAE,EAAE;IACpB,MAAMN,KAAK,GAAGJ,WAAW,CAACK,QAAQ,CAAC,CAAC;IACpC,OAAON,KAAK,CAACO,GAAG,CAAC,GAAGL,OAAO,IAAIS,EAAE,EAAE,EAAE;MACnCH,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;EACJ;EAEA,MAAMO,UAAUA,CAACC,QAAQ,EAAE;IACzB,MAAMR,KAAK,GAAGJ,WAAW,CAACK,QAAQ,CAAC,CAAC;IACpC,OAAON,KAAK,CAACc,IAAI,CAACZ,OAAO,EAAEW,QAAQ,EAAE;MACnCL,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;EACJ;EAEA,MAAMU,UAAUA,CAACJ,EAAE,EAAEE,QAAQ,EAAE;IAC7B,MAAMR,KAAK,GAAGJ,WAAW,CAACK,QAAQ,CAAC,CAAC;IACpC,OAAON,KAAK,CAACgB,GAAG,CAAC,GAAGd,OAAO,IAAIS,EAAE,EAAE,EAAEE,QAAQ,EAAE;MAC7CL,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;EACJ;EAEA,MAAMY,UAAUA,CAACN,EAAE,EAAE;IACnB,MAAMN,KAAK,GAAGJ,WAAW,CAACK,QAAQ,CAAC,CAAC;IACpC,OAAON,KAAK,CAACkB,MAAM,CAAC,GAAGhB,OAAO,IAAIS,EAAE,EAAE,EAAE;MACtCH,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAIF,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}