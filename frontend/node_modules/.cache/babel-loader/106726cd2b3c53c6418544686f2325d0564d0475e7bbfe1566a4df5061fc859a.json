{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { Modal } from 'bootstrap';\nimport ProductService from '@/services/ProductService';\nexport default {\n  name: 'AdminProducts',\n  data() {\n    return {\n      products: [],\n      isEditing: false,\n      newProduct: {\n        id: null,\n        name: '',\n        description: '',\n        price: 0,\n        category: '',\n        stock: 0,\n        imageUrl: ''\n      }\n    };\n  },\n  async created() {\n    await this.fetchProducts();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await ProductService.getAllProducts();\n        this.products = response.data;\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    openModal(editMode, product = null) {\n      this.isEditing = editMode;\n      if (editMode && product) {\n        this.newProduct = {\n          ...product\n        };\n      } else {\n        this.resetForm();\n      }\n      const modal = new Modal(document.getElementById('productModal'));\n      modal.show();\n    },\n    async addProduct() {\n      try {\n        const response = await ProductService.createProduct(this.newProduct);\n        this.products.push(response.data);\n        this.resetForm();\n        this.closeModal();\n      } catch (error) {\n        console.error('Error adding product:', error);\n      }\n    },\n    async updateProduct() {\n      try {\n        await ProductService.updateProduct(this.newProduct.id, this.newProduct);\n        await this.fetchProducts();\n        this.resetForm();\n        this.closeModal();\n      } catch (error) {\n        console.error('Error updating product:', error);\n      }\n    },\n    closeModal() {\n      const modalElement = document.getElementById('productModal');\n      if (modalElement) {\n        const modal = Modal.getInstance(modalElement);\n        if (modal) {\n          modal.hide();\n        }\n      }\n    },\n    async deleteProduct(id) {\n      if (!confirm('Are you sure you want to delete this product?')) return;\n      try {\n        await ProductService.deleteProduct(id);\n        this.products = this.products.filter(product => product.id !== id);\n      } catch (error) {\n        console.error('Error deleting product:', error);\n      }\n    },\n    resetForm() {\n      this.newProduct = {\n        id: null,\n        name: '',\n        description: '',\n        price: 0,\n        category: '',\n        stock: 0,\n        imageUrl: ''\n      };\n    },\n    goBack() {\n      this.$router.push({\n        name: 'AdminDashboard'\n      });\n    }\n  }\n};","map":{"version":3,"names":["Modal","ProductService","name","data","products","isEditing","newProduct","id","description","price","category","stock","imageUrl","created","fetchProducts","methods","response","getAllProducts","error","console","openModal","editMode","product","resetForm","modal","document","getElementById","show","addProduct","createProduct","push","closeModal","updateProduct","modalElement","getInstance","hide","deleteProduct","confirm","filter","goBack","$router"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\admin\\AdminProducts.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2 class=\"text-center mb-4\">Manage Products</h2>\n\n    <!-- Button to open modal -->\n    <button class=\"btn btn-success mb-3\" @click=\"openModal(false)\">\n      <i class=\"fas fa-plus-circle\"></i> Add Product\n    </button>\n\n    <!-- Products Grid Layout -->\n    <div class=\"row\">\n      <div class=\"col-md-4 mb-4\" v-for=\"product in products\" :key=\"product.id\">\n        <div class=\"card h-100 shadow-sm\">\n          <img\n            :src=\"product.imageUrl\"\n            class=\"card-img-top\"\n            alt=\"Product Image\"\n            style=\"height: 200px; object-fit: cover\"\n          />\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{ product.name }}</h5>\n            <p class=\"card-text text-muted\">{{ product.description }}</p>\n            <p class=\"card-text\">\n              <strong>Price:</strong> ${{ product.price }}\n            </p>\n            <p class=\"card-text\"><strong>Stock:</strong> {{ product.stock }}</p>\n            <p class=\"card-text\">\n              <strong>Category:</strong> {{ product.category }}\n            </p>\n          </div>\n          <div class=\"card-footer d-flex justify-content-between\">\n            <button\n              class=\"btn btn-warning btn-sm\"\n              @click=\"openModal(true, product)\"\n            >\n              <i class=\"fas fa-edit\"></i> Edit\n            </button>\n            <button\n              class=\"btn btn-danger btn-sm\"\n              @click=\"deleteProduct(product.id)\"\n            >\n              <i class=\"fas fa-trash\"></i> Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Modal for Adding/Editing Product -->\n    <div class=\"modal fade\" id=\"productModal\" tabindex=\"-1\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">\n              {{ isEditing ? 'Edit Product' : 'Add Product' }}\n            </h5>\n            <button\n              type=\"button\"\n              class=\"btn-close\"\n              data-bs-dismiss=\"modal\"\n            ></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"form-group mb-3\">\n              <label>Name</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                v-model=\"newProduct.name\"\n                required\n              />\n            </div>\n            <div class=\"form-group mb-3\">\n              <label>Description</label>\n              <textarea\n                class=\"form-control\"\n                v-model=\"newProduct.description\"\n                required\n              ></textarea>\n            </div>\n            <div class=\"form-group mb-3\">\n              <label>Price ($)</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                v-model.number=\"newProduct.price\"\n                required\n              />\n            </div>\n            <div class=\"form-group mb-3\">\n              <label>Stock</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                v-model.number=\"newProduct.stock\"\n                required\n              />\n            </div>\n            <div class=\"form-group mb-3\">\n              <label>Category</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                v-model=\"newProduct.category\"\n                required\n              />\n            </div>\n            <div class=\"form-group mb-3\">\n              <label>Image URL</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                v-model=\"newProduct.imageUrl\"\n              />\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n              Cancel\n            </button>\n            <button\n              class=\"btn btn-primary\"\n              @click=\"isEditing ? updateProduct() : addProduct()\"\n            >\n              {{ isEditing ? 'Update' : 'Save' }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <button class=\"btn btn-secondary mt-3\" @click=\"goBack\">Back</button>\n  </div>\n</template>\n\n<script>\nimport { Modal } from 'bootstrap';\nimport ProductService from '@/services/ProductService';\n\nexport default {\n  name: 'AdminProducts',\n  data() {\n    return {\n      products: [],\n      isEditing: false,\n      newProduct: {\n        id: null,\n        name: '',\n        description: '',\n        price: 0,\n        category: '',\n        stock: 0,\n        imageUrl: '',\n      },\n    };\n  },\n  async created() {\n    await this.fetchProducts();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await ProductService.getAllProducts();\n        this.products = response.data;\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    openModal(editMode, product = null) {\n      this.isEditing = editMode;\n      if (editMode && product) {\n        this.newProduct = { ...product };\n      } else {\n        this.resetForm();\n      }\n      const modal = new Modal(document.getElementById('productModal'));\n      modal.show();\n    },\n    async addProduct() {\n      try {\n        const response = await ProductService.createProduct(this.newProduct);\n        this.products.push(response.data);\n        this.resetForm();\n        this.closeModal();\n      } catch (error) {\n        console.error('Error adding product:', error);\n      }\n    },\n    async updateProduct() {\n      try {\n        await ProductService.updateProduct(this.newProduct.id, this.newProduct);\n        await this.fetchProducts();\n        this.resetForm();\n        this.closeModal();\n      } catch (error) {\n        console.error('Error updating product:', error);\n      }\n    },\n    closeModal() {\n      const modalElement = document.getElementById('productModal');\n      if (modalElement) {\n        const modal = Modal.getInstance(modalElement);\n        if (modal) {\n          modal.hide();\n        }\n      }\n    },\n    async deleteProduct(id) {\n      if (!confirm('Are you sure you want to delete this product?')) return;\n      try {\n        await ProductService.deleteProduct(id);\n        this.products = this.products.filter((product) => product.id !== id);\n      } catch (error) {\n        console.error('Error deleting product:', error);\n      }\n    },\n    resetForm() {\n      this.newProduct = {\n        id: null,\n        name: '',\n        description: '',\n        price: 0,\n        category: '',\n        stock: 0,\n        imageUrl: '',\n      };\n    },\n    goBack() {\n      this.$router.push({ name: 'AdminDashboard' });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.card {\n  border-radius: 10px;\n  overflow: hidden;\n}\n.card-img-top {\n  max-height: 200px;\n  object-fit: cover;\n}\n.card-body {\n  text-align: center;\n}\n.card-footer {\n  display: flex;\n  justify-content: space-between;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}