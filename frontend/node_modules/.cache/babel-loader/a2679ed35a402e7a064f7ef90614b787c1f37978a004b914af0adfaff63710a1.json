{"ast":null,"code":"import ProductService from '@/services/ProductService';\nimport CartService from '@/services/CartService';\nexport default {\n  data() {\n    return {\n      products: []\n    };\n  },\n  async created() {\n    const response = await ProductService.getAllProducts();\n    this.products = response.data;\n  },\n  methods: {\n    async addToCart(productId) {\n      try {\n        await CartService.addToCart(productId, 1);\n        alert('Product added to cart!');\n      } catch (error) {\n        console.error('Error adding to cart:', error);\n        alert('Error adding to cart');\n      }\n    }\n  }\n};","map":{"version":3,"names":["ProductService","CartService","data","products","created","response","getAllProducts","methods","addToCart","productId","alert","error","console"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\user\\ProductList.vue"],"sourcesContent":["<template>\n  <div class=\"product-list-container\">\n    <div class=\"header-bar\">\n      <router-link to=\"/user/dashboard\" class=\"back-link\">\n        <i class=\"bi bi-arrow-left\"></i>\n        <span>Back to Dashboard</span>\n      </router-link>\n    </div>\n\n    <div class=\"product-grid\">\n      <div v-for=\"product in products\" :key=\"product.id\" class=\"product-card\">\n        <div class=\"card-header\">\n          <img \n            :src=\"product.imageUrl\" \n            alt=\"Product image\"\n            class=\"product-image\"\n            @error=\"handleImageError\"\n          />\n          <div class=\"product-badges\">\n            <span class=\"sale-badge\">Sale</span>\n            <span class=\"shipping-badge\">\n              <i class=\"bi bi-truck\"></i>\n              Free Shipping\n            </span>\n          </div>\n        </div>\n\n        <div class=\"card-body\">\n          <div class=\"product-meta\">\n            <div class=\"category-tags\">\n              <span v-for=\"tag in [product.spec1, product.spec2, product.spec3]\" \n                    :key=\"tag\"\n                    class=\"tag\">\n                {{ tag }}\n              </span>\n            </div>\n            <div class=\"rating\">\n              <div class=\"stars\">\n                <i v-for=\"star in 5\" \n                   :key=\"star\" \n                   class=\"bi\" \n                   :class=\"star <= product.rating ? 'bi-star-fill' : 'bi-star'\"></i>\n              </div>\n              <span class=\"review-count\">({{ product.reviews }})</span>\n            </div>\n          </div>\n\n          <h3 class=\"product-title\">{{ product.name }}</h3>\n          <p class=\"product-description\">{{ product.description }}</p>\n          \n          <div class=\"price-section\">\n            <div class=\"pricing\">\n              <span class=\"current-price\">${{ product.price }}</span>\n              <span class=\"original-price\">${{ product.originalPrice }}</span>\n            </div>\n            \n            <div class=\"actions\">\n              <router-link \n                :to=\"`/product/${product.id}`\" \n                class=\"detail-button\">\n                View Details\n              </router-link>\n              <button \n                @click=\"addToCart(product.id)\" \n                class=\"cart-button\">\n                <i class=\"bi bi-cart-plus\"></i>\n                Add to Cart\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ProductService from '@/services/ProductService';\nimport CartService from '@/services/CartService';\n\nexport default {\n  data() {\n    return {\n      products: [],\n    };\n  },\n  async created() {\n    const response = await ProductService.getAllProducts();\n    this.products = response.data;\n  },\n  methods: {\n    async addToCart(productId) {\n      try {\n        await CartService.addToCart(productId, 1);\n        alert('Product added to cart!');\n      } catch (error) {\n        console.error('Error adding to cart:', error);\n        alert('Error adding to cart');\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.hover-shadow-lg {\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\n.hover-shadow-lg:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.075) !important;\n}\n\n.object-fit-cover {\n  object-fit: cover;\n}\n\n.line-clamp-3 {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.rating-stars {\n  font-size: 0.9rem;\n}\n\n.border-start {\n  border-left: 1px solid rgba(0, 0, 0, 0.1) !important;\n}\n\n.transition-all {\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.badge {\n  font-weight: 500;\n  padding: 0.5em 0.75em;\n}\n</style>\n"],"mappings":"AA6EA,OAAOA,cAAa,MAAO,2BAA2B;AACtD,OAAOC,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,QAAO,GAAI,MAAML,cAAc,CAACM,cAAc,CAAC,CAAC;IACtD,IAAI,CAACH,QAAO,GAAIE,QAAQ,CAACH,IAAI;EAC/B,CAAC;EACDK,OAAO,EAAE;IACP,MAAMC,SAASA,CAACC,SAAS,EAAE;MACzB,IAAI;QACF,MAAMR,WAAW,CAACO,SAAS,CAACC,SAAS,EAAE,CAAC,CAAC;QACzCC,KAAK,CAAC,wBAAwB,CAAC;MACjC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CD,KAAK,CAAC,sBAAsB,CAAC;MAC/B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}