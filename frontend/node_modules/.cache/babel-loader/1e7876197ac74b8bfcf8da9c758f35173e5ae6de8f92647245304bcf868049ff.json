{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.cartItems ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Your Cart\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cartItems, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, _toDisplayString(item.product.name) + \" - Quantity: \" + _toDisplayString(item.quantity), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[1] || (_cache[1] = [_createElementVNode(\"p\", null, \"Loading your cart...\", -1 /* HOISTED */)])));\n}","map":{"version":3,"names":["key","$data","cartItems","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","item","id","product","name","_toDisplayString","quantity","_hoisted_2","_cache"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\user\\UserCart.vue"],"sourcesContent":["<template>\n  <div v-if=\"cartItems\">\n    <h2>Your Cart</h2>\n    <ul>\n      <li v-for=\"item in cartItems\" :key=\"item.id\">\n        {{ item.product.name }} - Quantity: {{ item.quantity }}\n      </li>\n    </ul>\n  </div>\n  <div v-else>\n    <p>Loading your cart...</p>\n  </div>\n</template>\n\n<script>\nimport CartService from '@/services/CartService';\nimport AuthService from '@/services/AuthService';\n\nexport default {\n  data() {\n    return {\n      cartItems: null,\n    };\n  },\n  async created() {\n    try {\n      const user = AuthService.getUser(); // Get the current user\n      if (user) {\n        const cart = await CartService.getCart(user.id); // Fetch the cart for the current user\n        this.cartItems = cart; // Set the cart items to data\n      } else {\n        console.error('User not found');\n      }\n    } catch (error) {\n      console.error('Error fetching cart items:', error);\n      alert('Failed to fetch cart items'); // Alert in case of error\n    }\n  },\n};\n</script>\n\n<style scoped>\n/* Add your styling here */\n</style>\n"],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;SACaC,KAAA,CAAAC,SAAS,I,cAApBC,mBAAA,CAOM,OARRC,UAAA,G,0BAEIC,mBAAA,CAAkB,YAAd,WAAS,sBACbA,mBAAA,CAIK,c,kBAHHF,mBAAA,CAEKG,SAAA,QANXC,WAAA,CAIyBN,KAAA,CAAAC,SAAS,EAAjBM,IAAI;yBAAfL,mBAAA,CAEK;MAF0BH,GAAG,EAAEQ,IAAI,CAACC;wBACpCD,IAAI,CAACE,OAAO,CAACC,IAAI,IAAG,eAAa,GAAAC,gBAAA,CAAGJ,IAAI,CAACK,QAAQ;uDAI1DV,mBAAA,CAEM,OAXRW,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAUIV,mBAAA,CAA2B,WAAxB,sBAAoB,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}