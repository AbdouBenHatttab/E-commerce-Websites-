{"ast":null,"code":"// src/router/index.js\nimport { createRouter, createWebHistory } from 'vue-router';\nimport Home from '@/components/HomePage.vue';\nimport Login from '@/components/Login.vue';\nimport Register from '@/components/Register.vue';\n\n// Admin pages\nimport AdminDashboard from '@/components/admin/AdminDashboard.vue';\nimport AdminProfile from '@/components/admin/AdminProfile.vue';\nimport AdminUsers from '@/components/admin/AdminUsers.vue';\nimport AdminProducts from '@/components/admin/AdminProducts.vue';\n\n// User pages\nimport UserDashboard from '@/components/user/UserDashboard.vue';\nimport UserProfile from '@/components/user/UserProfile.vue';\nimport ProductList from '@/components/user/ProductList.vue';\nimport UserCart from '@/components/user/UserCart.vue';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register\n},\n// Admin routes\n{\n  path: '/admin/dashboard',\n  name: 'AdminDashboard',\n  component: AdminDashboard,\n  meta: {\n    requiresAuth: true,\n    role: 'ADMIN'\n  }\n}, {\n  path: '/admin/profile',\n  name: 'AdminProfile',\n  component: AdminProfile,\n  meta: {\n    requiresAuth: true,\n    role: 'ADMIN'\n  }\n}, {\n  path: '/admin/users',\n  name: 'AdminUsers',\n  component: AdminUsers,\n  meta: {\n    requiresAuth: true,\n    role: 'ADMIN'\n  }\n}, {\n  path: '/admin/products',\n  name: 'AdminProducts',\n  component: AdminProducts,\n  meta: {\n    requiresAuth: true,\n    role: 'ADMIN'\n  }\n},\n// User routes\n{\n  path: '/user/dashboard',\n  name: 'UserDashboard',\n  component: UserDashboard,\n  meta: {\n    requiresAuth: true,\n    role: 'USER'\n  }\n}, {\n  path: '/user/profile',\n  name: 'UserProfile',\n  component: UserProfile,\n  meta: {\n    requiresAuth: true,\n    role: 'USER'\n  }\n}, {\n  path: '/user/products',\n  name: 'ProductList',\n  component: ProductList,\n  meta: {\n    requiresAuth: true,\n    role: 'USER'\n  }\n}, {\n  path: '/user/cart',\n  name: 'UserCart',\n  component: UserCart,\n  meta: {\n    requiresAuth: true,\n    role: 'USER'\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Global route guard: Checks for authentication and role\nrouter.beforeEach((to, from, next) => {\n  const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n  if (to.meta.requiresAuth) {\n    if (!user) {\n      next('/login');\n    } else if (to.meta.role && user.role !== to.meta.role) {\n      // Redirect to appropriate dashboard if role does not match\n      next(user.role === 'ADMIN' ? '/admin/dashboard' : '/user/dashboard');\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","Login","Register","AdminDashboard","AdminProfile","AdminUsers","AdminProducts","UserDashboard","UserProfile","ProductList","UserCart","routes","path","name","component","meta","requiresAuth","role","router","history","beforeEach","to","from","next","user","localStorage","getItem","JSON","parse"],"sources":["C:/Users/Hedib/OneDrive/Bureau/hello-word-vue/src/router/index.js"],"sourcesContent":["// src/router/index.js\nimport { createRouter, createWebHistory } from 'vue-router';\nimport Home from '@/components/HomePage.vue';\nimport Login from '@/components/Login.vue';\nimport Register from '@/components/Register.vue';\n\n// Admin pages\nimport AdminDashboard from '@/components/admin/AdminDashboard.vue';\nimport AdminProfile from '@/components/admin/AdminProfile.vue';\nimport AdminUsers from '@/components/admin/AdminUsers.vue';\nimport AdminProducts from '@/components/admin/AdminProducts.vue';\n\n// User pages\nimport UserDashboard from '@/components/user/UserDashboard.vue';\nimport UserProfile from '@/components/user/UserProfile.vue';\nimport ProductList from '@/components/user/ProductList.vue';\nimport UserCart from '@/components/user/UserCart.vue';\n\nconst routes = [\n  { path: '/', name: 'Home', component: Home },\n  { path: '/login', name: 'Login', component: Login },\n  { path: '/register', name: 'Register', component: Register },\n  // Admin routes\n  {\n    path: '/admin/dashboard',\n    name: 'AdminDashboard',\n    component: AdminDashboard,\n    meta: { requiresAuth: true, role: 'ADMIN' },\n  },\n  {\n    path: '/admin/profile',\n    name: 'AdminProfile',\n    component: AdminProfile,\n    meta: { requiresAuth: true, role: 'ADMIN' },\n  },\n  {\n    path: '/admin/users',\n    name: 'AdminUsers',\n    component: AdminUsers,\n    meta: { requiresAuth: true, role: 'ADMIN' },\n  },\n  {\n    path: '/admin/products',\n    name: 'AdminProducts',\n    component: AdminProducts,\n    meta: { requiresAuth: true, role: 'ADMIN' },\n  },\n  // User routes\n  {\n    path: '/user/dashboard',\n    name: 'UserDashboard',\n    component: UserDashboard,\n    meta: { requiresAuth: true, role: 'USER' },\n  },\n  {\n    path: '/user/profile',\n    name: 'UserProfile',\n    component: UserProfile,\n    meta: { requiresAuth: true, role: 'USER' },\n  },\n  {\n    path: '/user/products',\n    name: 'ProductList',\n    component: ProductList,\n    meta: { requiresAuth: true, role: 'USER' },\n  },\n  {\n    path: '/user/cart',\n    name: 'UserCart',\n    component: UserCart,\n    meta: { requiresAuth: true, role: 'USER' },\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\n// Global route guard: Checks for authentication and role\nrouter.beforeEach((to, from, next) => {\n  const user = localStorage.getItem('user')\n    ? JSON.parse(localStorage.getItem('user'))\n    : null;\n  if (to.meta.requiresAuth) {\n    if (!user) {\n      next('/login');\n    } else if (to.meta.role && user.role !== to.meta.role) {\n      // Redirect to appropriate dashboard if role does not match\n      next(user.role === 'ADMIN' ? '/admin/dashboard' : '/user/dashboard');\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}