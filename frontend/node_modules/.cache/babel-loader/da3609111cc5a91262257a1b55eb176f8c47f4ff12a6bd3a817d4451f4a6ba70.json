{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport AuthService from '@/services/AuthService';\nexport default {\n  name: 'RegisterPage',\n  data() {\n    return {\n      user: {\n        name: '',\n        email: '',\n        password: '',\n        phoneNumber: '',\n        address: '',\n        status: 'ACTIVE',\n        role: 'ROLE_USER'\n      },\n      image: null,\n      // Image file\n      message: '',\n      messageType: 'alert-info',\n      loading: false\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.image = event.target.files[0];\n    },\n    async register() {\n      this.loading = true;\n      try {\n        const formData = new FormData();\n        Object.keys(this.user).forEach(key => {\n          formData.append(key, this.user[key]);\n        });\n        if (this.image) {\n          formData.append('image', this.image);\n        }\n        await AuthService.register(formData);\n        this.message = 'Registration successful! Redirecting to login...';\n        this.messageType = 'alert-success';\n        setTimeout(() => {\n          this.$router.push({\n            name: 'Login'\n          });\n        }, 2000);\n      } catch (err) {\n        this.message = 'Registration failed. Please try again.';\n        this.messageType = 'alert-danger';\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["AuthService","name","data","user","email","password","phoneNumber","address","status","role","image","message","messageType","loading","methods","handleFileUpload","event","target","files","register","formData","FormData","Object","keys","forEach","key","append","setTimeout","$router","push","err"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\RegisterPage.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2 class=\"text-center\">Register</h2>\n    <form @submit.prevent=\"register\">\n      <div class=\"mb-3\">\n        <label>Name:</label>\n        <input type=\"text\" class=\"form-control\" v-model=\"user.name\" required />\n      </div>\n      <div class=\"mb-3\">\n        <label>Email:</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          v-model=\"user.email\"\n          required\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label>Password:</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          v-model=\"user.password\"\n          required\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label>Phone Number:</label>\n        <input type=\"text\" class=\"form-control\" v-model=\"user.phoneNumber\" />\n      </div>\n      <div class=\"mb-3\">\n        <label>Address:</label>\n        <input type=\"text\" class=\"form-control\" v-model=\"user.address\" />\n      </div>\n      <div class=\"mb-3\">\n        <label>Profile Image:</label>\n        <input type=\"file\" class=\"form-control\" @change=\"handleFileUpload\" />\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-success w-100\" :disabled=\"loading\">\n        {{ loading ? 'Registering...' : 'Register' }}\n      </button>\n\n      <p class=\"mt-3 text-center\">\n        Already have an account?\n        <router-link to=\"/login\">Login here</router-link>\n      </p>\n    </form>\n\n    <div v-if=\"message\" class=\"alert mt-3\" :class=\"messageType\">\n      {{ message }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport AuthService from '@/services/AuthService';\n\nexport default {\n  name: 'RegisterPage',\n  data() {\n    return {\n      user: {\n        name: '',\n        email: '',\n        password: '',\n        phoneNumber: '',\n        address: '',\n        status: 'ACTIVE',\n        role: 'ROLE_USER',\n      },\n      image: null, // Image file\n      message: '',\n      messageType: 'alert-info',\n      loading: false,\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.image = event.target.files[0];\n    },\n    async register() {\n      this.loading = true;\n      try {\n        const formData = new FormData();\n        Object.keys(this.user).forEach((key) => {\n          formData.append(key, this.user[key]);\n        });\n\n        if (this.image) {\n          formData.append('image', this.image);\n        }\n\n        await AuthService.register(formData);\n        this.message = 'Registration successful! Redirecting to login...';\n        this.messageType = 'alert-success';\n\n        setTimeout(() => {\n          this.$router.push({ name: 'Login' });\n        }, 2000);\n      } catch (err) {\n        this.message = 'Registration failed. Please try again.';\n        this.messageType = 'alert-danger';\n      } finally {\n        this.loading = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.alert {\n  text-align: center;\n}\n</style>\n"],"mappings":";;;AAwDA,OAAOA,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJF,IAAI,EAAE,EAAE;QACRG,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,WAAW,EAAE,EAAE;QACfC,OAAO,EAAE,EAAE;QACXC,MAAM,EAAE,QAAQ;QAChBC,IAAI,EAAE;MACR,CAAC;MACDC,KAAK,EAAE,IAAI;MAAE;MACbC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,YAAY;MACzBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACN,KAAI,GAAIM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IACD,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI,CAACN,OAAM,GAAI,IAAI;MACnB,IAAI;QACF,MAAMO,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACpB,IAAI,CAAC,CAACqB,OAAO,CAAEC,GAAG,IAAK;UACtCL,QAAQ,CAACM,MAAM,CAACD,GAAG,EAAE,IAAI,CAACtB,IAAI,CAACsB,GAAG,CAAC,CAAC;QACtC,CAAC,CAAC;QAEF,IAAI,IAAI,CAACf,KAAK,EAAE;UACdU,QAAQ,CAACM,MAAM,CAAC,OAAO,EAAE,IAAI,CAAChB,KAAK,CAAC;QACtC;QAEA,MAAMV,WAAW,CAACmB,QAAQ,CAACC,QAAQ,CAAC;QACpC,IAAI,CAACT,OAAM,GAAI,kDAAkD;QACjE,IAAI,CAACC,WAAU,GAAI,eAAe;QAElCe,UAAU,CAAC,MAAM;UACf,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAE5B,IAAI,EAAE;UAAQ,CAAC,CAAC;QACtC,CAAC,EAAE,IAAI,CAAC;MACV,EAAE,OAAO6B,GAAG,EAAE;QACZ,IAAI,CAACnB,OAAM,GAAI,wCAAwC;QACvD,IAAI,CAACC,WAAU,GAAI,cAAc;MACnC,UAAU;QACR,IAAI,CAACC,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}