{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AuthService from '@/services/AuthService';\nimport UserService from '@/services/UserService';\nexport default {\n  name: 'AdminProfile',\n  data() {\n    return {\n      user: null,\n      userForm: {\n        name: '',\n        email: '',\n        phoneNumber: '',\n        address: '',\n        imageUrl: ''\n      },\n      isModalVisible: false\n    };\n  },\n  async mounted() {\n    this.fetchAdminProfile();\n  },\n  methods: {\n    async fetchAdminProfile() {\n      try {\n        const user = AuthService.getCurrentUser();\n        if (user) {\n          this.user = user;\n          this.userForm = {\n            ...this.user\n          }; // Initialize form data with current user\n        } else {\n          console.error('User is not logged in.');\n        }\n      } catch (error) {\n        console.error('Error fetching admin profile:', error);\n      }\n    },\n    showModal() {\n      this.isModalVisible = true;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    async updateProfile() {\n      try {\n        const userId = this.user.id; // The logged-in user's ID\n        const updatedUserData = {\n          ...this.userForm\n        }; // Use the form data\n\n        // Call the UserService to update the user\n        const response = await UserService.updateUser(userId, updatedUserData);\n        console.log('Profile updated:', response.data);\n\n        // After successful update, update the user in localStorage\n        AuthService.setUser(response.data); // Assuming `setUser` method is added in AuthService\n\n        // Update local state\n        this.user = {\n          ...response.data\n        };\n        this.closeModal();\n      } catch (error) {\n        console.error('Error updating profile:', error);\n      }\n    },\n    goBack() {\n      this.$router.push({\n        name: 'AdminDashboard'\n      });\n    }\n  }\n};","map":{"version":3,"names":["AuthService","UserService","name","data","user","userForm","email","phoneNumber","address","imageUrl","isModalVisible","mounted","fetchAdminProfile","methods","getCurrentUser","console","error","showModal","closeModal","updateProfile","userId","id","updatedUserData","response","updateUser","log","setUser","goBack","$router","push"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\admin\\AdminProfile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <!-- Header Section -->\n    <div class=\"profile-header bg-primary-gradient\">\n      <div class=\"container py-5\">\n        <h1 class=\"text-center text-white display-5 fw-bold mb-4\">\n          Admin Profile\n        </h1>\n      </div>\n    </div>\n\n    <!-- Profile Content -->\n    <div class=\"container py-5\">\n      <div class=\"row g-5 justify-content-center\">\n        <!-- Profile Card -->\n        <div class=\"col-xl-4 col-lg-5\">\n          <div class=\"card profile-card shadow-lg border-0\">\n            <div class=\"card-body p-4\">\n              <div class=\"d-flex flex-column align-items-center\">\n                <div class=\"profile-avatar-wrapper mb-4\">\n                  <div class=\"profile-avatar bg-primary-soft\">\n                    <img\n                      v-if=\"user.imageUrl\"\n                      :src=\"user.imageUrl\"\n                      class=\"img-fluid\"\n                      alt=\"Profile\"\n                    />\n                    <svg\n                      v-else\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"64\"\n                      height=\"64\"\n                      fill=\"currentColor\"\n                      class=\"bi bi-person-circle text-primary\"\n                      viewBox=\"0 0 16 16\"\n                    >\n                      <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\n                      <path\n                        fill-rule=\"evenodd\"\n                        d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"\n                      />\n                    </svg>\n                  </div>\n                </div>\n                <h2 class=\"h3 mb-2\">{{ user.name }}</h2>\n                <div class=\"d-flex gap-2 mb-4\">\n                  <span class=\"badge bg-primary-soft text-primary\">{{\n                    user.role\n                  }}</span>\n                  <span class=\"badge bg-success-soft text-success\">{{\n                    user.status\n                  }}</span>\n                </div>\n              </div>\n\n              <div class=\"profile-stats\">\n                <div class=\"d-flex justify-content-around text-center\">\n                  <div>\n                    <div class=\"h5 mb-0\">12</div>\n                    <small class=\"text-muted\">Projects</small>\n                  </div>\n                  <div>\n                    <div class=\"h5 mb-0\">98%</div>\n                    <small class=\"text-muted\">Success</small>\n                  </div>\n                  <div>\n                    <div class=\"h5 mb-0\">2y</div>\n                    <small class=\"text-muted\">Experience</small>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Details Card -->\n        <div class=\"col-xl-8 col-lg-7\">\n          <div class=\"card details-card shadow-lg border-0\">\n            <div class=\"card-body p-4\">\n              <div\n                class=\"d-flex justify-content-between align-items-center mb-4\"\n              >\n                <h3 class=\"h4 mb-0\">Personal Information</h3>\n                <button @click=\"showModal\" class=\"btn btn-primary btn-icon\">\n                  <i class=\"bi bi-pencil-square\"></i>\n                </button>\n              </div>\n\n              <div class=\"row g-4\">\n                <div class=\"col-md-6\">\n                  <div class=\"detail-item\">\n                    <i class=\"bi bi-envelope-fill text-primary\"></i>\n                    <div>\n                      <h6 class=\"mb-1\">Email Address</h6>\n                      <p class=\"mb-0 text-muted\">{{ user.email }}</p>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-md-6\">\n                  <div class=\"detail-item\">\n                    <i class=\"bi bi-telephone-fill text-primary\"></i>\n                    <div>\n                      <h6 class=\"mb-1\">Phone Number</h6>\n                      <p class=\"mb-0 text-muted\">\n                        {{ user.phoneNumber || 'Not provided' }}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"col-12\">\n                  <div class=\"detail-item\">\n                    <i class=\"bi bi-geo-alt-fill text-primary\"></i>\n                    <div>\n                      <h6 class=\"mb-1\">Address</h6>\n                      <p class=\"mb-0 text-muted\">\n                        {{ user.address || 'Not provided' }}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Edit Modal -->\n    <div v-if=\"isModalVisible\" class=\"modal-backdrop fade show\">\n      <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n        <div class=\"modal-content shadow-3d\">\n          <div class=\"modal-header bg-primary text-white\">\n            <h5 class=\"modal-title\">Edit Profile</h5>\n            <button\n              type=\"button\"\n              class=\"btn-close btn-close-white\"\n              @click=\"closeModal\"\n            ></button>\n          </div>\n          <div class=\"modal-body p-4\">\n            <form @submit.prevent=\"updateProfile\">\n              <div class=\"row g-4\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-floating\">\n                    <input\n                      id=\"name\"\n                      type=\"text\"\n                      class=\"form-control\"\n                      v-model=\"userForm.name\"\n                      required\n                    />\n                    <label for=\"name\">Full Name</label>\n                  </div>\n                </div>\n\n                <div class=\"col-md-6\">\n                  <div class=\"form-floating\">\n                    <input\n                      id=\"email\"\n                      type=\"email\"\n                      class=\"form-control\"\n                      v-model=\"userForm.email\"\n                      required\n                      disabled\n                    />\n                    <label for=\"email\">Email Address</label>\n                  </div>\n                </div>\n\n                <div class=\"col-md-6\">\n                  <div class=\"form-floating\">\n                    <input\n                      id=\"phoneNumber\"\n                      type=\"text\"\n                      class=\"form-control\"\n                      v-model=\"userForm.phoneNumber\"\n                    />\n                    <label for=\"phoneNumber\">Phone Number</label>\n                  </div>\n                </div>\n\n                <div class=\"col-md-6\">\n                  <div class=\"form-floating\">\n                    <input\n                      id=\"imageUrl\"\n                      type=\"text\"\n                      class=\"form-control\"\n                      v-model=\"userForm.imageUrl\"\n                    />\n                    <label for=\"imageUrl\">Profile Image URL</label>\n                  </div>\n                </div>\n\n                <div class=\"col-12\">\n                  <div class=\"form-floating\">\n                    <input\n                      id=\"address\"\n                      type=\"text\"\n                      class=\"form-control\"\n                      v-model=\"userForm.address\"\n                    />\n                    <label for=\"address\">Address</label>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"modal-footer border-0 pt-4\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  @click=\"closeModal\"\n                >\n                  Cancel\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary\">\n                  Save Changes\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AuthService from '@/services/AuthService';\nimport UserService from '@/services/UserService';\n\nexport default {\n  name: 'AdminProfile',\n  data() {\n    return {\n      user: null,\n      userForm: {\n        name: '',\n        email: '',\n        phoneNumber: '',\n        address: '',\n        imageUrl: '',\n      },\n      isModalVisible: false,\n    };\n  },\n  async mounted() {\n    this.fetchAdminProfile();\n  },\n  methods: {\n    async fetchAdminProfile() {\n      try {\n        const user = AuthService.getCurrentUser();\n        if (user) {\n          this.user = user;\n          this.userForm = { ...this.user }; // Initialize form data with current user\n        } else {\n          console.error('User is not logged in.');\n        }\n      } catch (error) {\n        console.error('Error fetching admin profile:', error);\n      }\n    },\n    showModal() {\n      this.isModalVisible = true;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    async updateProfile() {\n      try {\n        const userId = this.user.id; // The logged-in user's ID\n        const updatedUserData = { ...this.userForm }; // Use the form data\n\n        // Call the UserService to update the user\n        const response = await UserService.updateUser(userId, updatedUserData);\n        console.log('Profile updated:', response.data);\n\n        // After successful update, update the user in localStorage\n        AuthService.setUser(response.data); // Assuming `setUser` method is added in AuthService\n\n        // Update local state\n        this.user = { ...response.data };\n        this.closeModal();\n      } catch (error) {\n        console.error('Error updating profile:', error);\n      }\n    },\n    goBack() {\n      this.$router.push({ name: 'AdminDashboard' });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.card {\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  border-radius: 1rem;\n}\n\n.card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175) !important;\n}\n\n.badge {\n  padding: 0.5em 1em;\n  border-radius: 0.75rem;\n}\n\n.btn-lg {\n  padding: 0.75rem 1.5rem;\n  border-radius: 0.75rem;\n}\n\n.modal-content {\n  border-radius: 1rem;\n}\n\n.form-control {\n  border-radius: 0.75rem;\n  padding: 0.75rem 1.25rem;\n}\n\n.form-control:focus {\n  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\n}\n</style>\n"],"mappings":";AAqOA,OAAOA,WAAU,MAAO,wBAAwB;AAChD,OAAOC,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE;QACRH,IAAI,EAAE,EAAE;QACRI,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE;MACZ,CAAC;MACDC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAMR,IAAG,GAAIJ,WAAW,CAACc,cAAc,CAAC,CAAC;QACzC,IAAIV,IAAI,EAAE;UACR,IAAI,CAACA,IAAG,GAAIA,IAAI;UAChB,IAAI,CAACC,QAAO,GAAI;YAAE,GAAG,IAAI,CAACD;UAAK,CAAC,EAAE;QACpC,OAAO;UACLW,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;QACzC;MACF,EAAE,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,CAACP,cAAa,GAAI,IAAI;IAC5B,CAAC;IACDQ,UAAUA,CAAA,EAAG;MACX,IAAI,CAACR,cAAa,GAAI,KAAK;IAC7B,CAAC;IACD,MAAMS,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,MAAK,GAAI,IAAI,CAAChB,IAAI,CAACiB,EAAE,EAAE;QAC7B,MAAMC,eAAc,GAAI;UAAE,GAAG,IAAI,CAACjB;QAAS,CAAC,EAAE;;QAE9C;QACA,MAAMkB,QAAO,GAAI,MAAMtB,WAAW,CAACuB,UAAU,CAACJ,MAAM,EAAEE,eAAe,CAAC;QACtEP,OAAO,CAACU,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAACpB,IAAI,CAAC;;QAE9C;QACAH,WAAW,CAAC0B,OAAO,CAACH,QAAQ,CAACpB,IAAI,CAAC,EAAE;;QAEpC;QACA,IAAI,CAACC,IAAG,GAAI;UAAE,GAAGmB,QAAQ,CAACpB;QAAK,CAAC;QAChC,IAAI,CAACe,UAAU,CAAC,CAAC;MACnB,EAAE,OAAOF,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDW,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAE3B,IAAI,EAAE;MAAiB,CAAC,CAAC;IAC/C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}