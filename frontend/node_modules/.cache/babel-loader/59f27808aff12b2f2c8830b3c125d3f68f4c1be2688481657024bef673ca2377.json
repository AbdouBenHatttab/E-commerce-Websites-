{"ast":null,"code":"import AuthService from \"@/services/AuthService\";\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      error: \"\",\n      success: \"\"\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await AuthService.login({\n          email: this.email,\n          password: this.password\n        });\n        if (response.user?.role === \"ROLE_ADMIN\") {\n          this.success = \"Login successful! Redirecting to Admin Dashboard...\";\n          this.redirectUser(\"AdminDashboard\");\n        } else if (response.user?.role === \"ROLE_USER\") {\n          this.success = \"Login successful! Redirecting to User Dashboard...\";\n          this.redirectUser(\"UserDashboard\");\n        } else {\n          this.error = \"Unexpected user role. Please contact support.\";\n        }\n      } catch (err) {\n        this.error = \"Invalid credentials. Please try again.\";\n        this.success = \"\";\n        console.error(\"Login failed:\", err);\n      }\n    },\n    redirectUser(routeName) {\n      this.$router.replace({\n        name: routeName\n      }).then(() => {\n        window.location.reload();\n      });\n    }\n  }\n};","map":{"version":3,"names":["AuthService","name","data","email","password","error","success","methods","login","response","user","role","redirectUser","err","console","routeName","$router","replace","then","window","location","reload"],"sources":["C:\\projet stage 2\\final\\hello-word-vue\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <!-- Gradient Header -->\n    <div class=\"login-header bg-primary-gradient\">\n      <div class=\"container py-5\">\n        <h1 class=\"text-center text-white display-5 fw-bold\">Welcome Back</h1>\n      </div>\n    </div>\n\n    <!-- Login Card -->\n    <div class=\"container py-5\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-8 col-lg-6\">\n          <div class=\"card shadow-lg border-0\">\n            <div class=\"card-body p-4 p-md-5\">\n              <form @submit.prevent=\"login\">\n                <!-- Email Input -->\n                <div class=\"form-floating mb-4\">\n                  <input type=\"email\" class=\"form-control\" id=\"email\" v-model=\"email\" required autocomplete=\"email\"\n                    placeholder=\"name@example.com\" />\n                  <label for=\"email\">\n                    <i class=\"bi bi-envelope-fill me-2\"></i>Email address\n                  </label>\n                </div>\n\n                <!-- Password Input -->\n                <div class=\"form-floating mb-4\">\n                  <input type=\"password\" class=\"form-control\" id=\"password\" v-model=\"password\" required\n                    autocomplete=\"current-password\" placeholder=\"Password\" />\n                  <label for=\"password\">\n                    <i class=\"bi bi-lock-fill me-2\"></i>Password\n                  </label>\n                </div>\n\n                <!-- Submit Button -->\n                <button type=\"submit\" class=\"btn btn-primary w-100 btn-lg mb-4\">\n                  <i class=\"bi bi-box-arrow-in-right me-2\"></i>Sign In\n                </button>\n\n                <!-- Alerts -->\n                <div v-if=\"error\" class=\"alert alert-danger mb-4\">\n                  <i class=\"bi bi-exclamation-circle-fill me-2\"></i>{{ error }}\n                </div>\n                <div v-if=\"success\" class=\"alert alert-success mb-4\">\n                  <i class=\"bi bi-check-circle-fill me-2\"></i>{{ success }}\n                </div>\n\n                <!-- Registration Link -->\n                <div class=\"text-center text-muted mt-4\">\n                  <p class=\"mb-0\">\n                    Don't have an account?\n                    <router-link to=\"/register\" class=\"text-primary fw-bold text-decoration-none\">\n                      Create one now\n                    </router-link>\n                  </p>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AuthService from \"@/services/AuthService\"\n\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      error: \"\",\n      success: \"\",\n    }\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await AuthService.login({\n          email: this.email,\n          password: this.password,\n        })\n\n        if (response.user?.role === \"ROLE_ADMIN\") {\n          this.success = \"Login successful! Redirecting to Admin Dashboard...\"\n          this.redirectUser(\"AdminDashboard\")\n        } else if (response.user?.role === \"ROLE_USER\") {\n          this.success = \"Login successful! Redirecting to User Dashboard...\"\n          this.redirectUser(\"UserDashboard\")\n        } else {\n          this.error = \"Unexpected user role. Please contact support.\"\n        }\n      } catch (err) {\n        this.error = \"Invalid credentials. Please try again.\"\n        this.success = \"\"\n        console.error(\"Login failed:\", err)\n      }\n    },\n    redirectUser(routeName) {\n      this.$router.replace({ name: routeName }).then(() => {\n        window.location.reload()\n      })\n    },\n  },\n}\n</script>\n\n<style scoped>\n.login-header {\n  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);\n  border-radius: 0 0 2rem 2rem;\n}\n\n.card {\n  border-radius: 1.5rem;\n  margin-top: -4rem;\n}\n\n.form-control {\n  border-radius: 0.75rem;\n  padding: 1rem;\n  border: 1px solid #e5e7eb;\n}\n\n.form-control:focus {\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);\n  border-color: #3b82f6;\n}\n\n.btn-primary {\n  border-radius: 0.75rem;\n  padding: 1rem;\n  transition: all 0.3s ease;\n}\n\n.btn-primary:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 0.5rem 1rem rgba(59, 130, 246, 0.2);\n}\n\n.alert {\n  border-radius: 0.75rem;\n}\n\n.text-primary {\n  color: #3b82f6 !important;\n}\n\n@media (max-width: 768px) {\n  .card {\n    margin-top: -2rem;\n  }\n\n  .login-header {\n    border-radius: 0 0 1.5rem 1.5rem;\n  }\n}\n</style>\n"],"mappings":"AAkEA,OAAOA,WAAU,MAAO,wBAAuB;AAE/C,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMT,WAAW,CAACQ,KAAK,CAAC;UACvCL,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC;QAED,IAAIK,QAAQ,CAACC,IAAI,EAAEC,IAAG,KAAM,YAAY,EAAE;UACxC,IAAI,CAACL,OAAM,GAAI,qDAAoD;UACnE,IAAI,CAACM,YAAY,CAAC,gBAAgB;QACpC,OAAO,IAAIH,QAAQ,CAACC,IAAI,EAAEC,IAAG,KAAM,WAAW,EAAE;UAC9C,IAAI,CAACL,OAAM,GAAI,oDAAmD;UAClE,IAAI,CAACM,YAAY,CAAC,eAAe;QACnC,OAAO;UACL,IAAI,CAACP,KAAI,GAAI,+CAA8C;QAC7D;MACF,EAAE,OAAOQ,GAAG,EAAE;QACZ,IAAI,CAACR,KAAI,GAAI,wCAAuC;QACpD,IAAI,CAACC,OAAM,GAAI,EAAC;QAChBQ,OAAO,CAACT,KAAK,CAAC,eAAe,EAAEQ,GAAG;MACpC;IACF,CAAC;IACDD,YAAYA,CAACG,SAAS,EAAE;MACtB,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC;QAAEhB,IAAI,EAAEc;MAAU,CAAC,CAAC,CAACG,IAAI,CAAC,MAAM;QACnDC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;MACzB,CAAC;IACH;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}