{"ast":null,"code":"import axios from \"axios\";\nimport AuthService from \"@/services/AuthService\"; // Adjust the path as needed\n\n// Set the base URL for contact messages (you can also use environment variables)\nconst API_URL = process.env.VUE_APP_CONTACT_API_URL || \"http://localhost:8080/contact/messages\";\nclass ContactService {\n  // Get all messages\n  async getAllMessages() {\n    try {\n      const response = await axios.get(API_URL, {\n        headers: {\n          Authorization: `Bearer ${AuthService.getToken()}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error);\n      throw error;\n    }\n  }\n\n  // Get a single message by ID\n  async getMessageById(id) {\n    try {\n      const response = await axios.get(`${API_URL}/${id}`, {\n        headers: {\n          Authorization: `Bearer ${AuthService.getToken()}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching message with ID ${id}:`, error);\n      throw error;\n    }\n  }\n\n  // Create a new message\n  async createMessage(message) {\n    try {\n      const response = await axios.post(API_URL, message, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${AuthService.getToken()}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error creating message:\", error);\n      throw error;\n    }\n  }\n\n  // Update an existing message\n  async updateMessage(id, updatedMessage) {\n    try {\n      const response = await axios.put(`${API_URL}/${id}`, updatedMessage, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${AuthService.getToken()}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating message with ID ${id}:`, error);\n      throw error;\n    }\n  }\n\n  // Delete a message\n  async deleteMessage(id) {\n    try {\n      await axios.delete(`${API_URL}/${id}`, {\n        headers: {\n          Authorization: `Bearer ${AuthService.getToken()}`\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error(`Error deleting message with ID ${id}:`, error);\n      throw error;\n    }\n  }\n}\nexport default new ContactService();","map":{"version":3,"names":["axios","AuthService","API_URL","process","env","VUE_APP_CONTACT_API_URL","ContactService","getAllMessages","response","get","headers","Authorization","getToken","data","error","console","getMessageById","id","createMessage","message","post","updateMessage","updatedMessage","put","deleteMessage","delete","success"],"sources":["C:/projet stage 2/final/hello-word-vue/src/services/ContactService.js"],"sourcesContent":["import axios from \"axios\"\nimport AuthService from \"@/services/AuthService\" // Adjust the path as needed\n\n// Set the base URL for contact messages (you can also use environment variables)\nconst API_URL =\n  process.env.VUE_APP_CONTACT_API_URL ||\n  \"http://localhost:8080/contact/messages\"\n\nclass ContactService {\n  // Get all messages\n  async getAllMessages() {\n    try {\n      const response = await axios.get(API_URL, {\n        headers: { Authorization: `Bearer ${AuthService.getToken()}` },\n      })\n      return response.data\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error)\n      throw error\n    }\n  }\n\n  // Get a single message by ID\n  async getMessageById(id) {\n    try {\n      const response = await axios.get(`${API_URL}/${id}`, {\n        headers: { Authorization: `Bearer ${AuthService.getToken()}` },\n      })\n      return response.data\n    } catch (error) {\n      console.error(`Error fetching message with ID ${id}:`, error)\n      throw error\n    }\n  }\n\n  // Create a new message\n  async createMessage(message) {\n    try {\n      const response = await axios.post(API_URL, message, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${AuthService.getToken()}`,\n        },\n      })\n      return response.data\n    } catch (error) {\n      console.error(\"Error creating message:\", error)\n      throw error\n    }\n  }\n\n  // Update an existing message\n  async updateMessage(id, updatedMessage) {\n    try {\n      const response = await axios.put(`${API_URL}/${id}`, updatedMessage, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${AuthService.getToken()}`,\n        },\n      })\n      return response.data\n    } catch (error) {\n      console.error(`Error updating message with ID ${id}:`, error)\n      throw error\n    }\n  }\n\n  // Delete a message\n  async deleteMessage(id) {\n    try {\n      await axios.delete(`${API_URL}/${id}`, {\n        headers: { Authorization: `Bearer ${AuthService.getToken()}` },\n      })\n      return { success: true }\n    } catch (error) {\n      console.error(`Error deleting message with ID ${id}:`, error)\n      throw error\n    }\n  }\n}\n\nexport default new ContactService()\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}