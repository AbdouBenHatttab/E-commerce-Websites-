{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"product-list\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: product.id,\n      class: \"product-card\"\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(product.description), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Price: $\" + _toDisplayString(product.price), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.addToCart(product)\n    }, \"Add to Cart\", 8 /* PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","products","product","key","id","_createElementVNode","_toDisplayString","name","description","price","onClick","$event","$options","addToCart","_hoisted_2"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\user\\ProductList.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-list\">\r\n    <div v-for=\"product in products\" :key=\"product.id\" class=\"product-card\">\r\n      <h3>{{ product.name }}</h3>\r\n      <p>{{ product.description }}</p>\r\n      <p>Price: ${{ product.price }}</p>\r\n      <button @click=\"addToCart(product)\">Add to Cart</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductService from \"@/services/ProductService\";\r\nimport CartService from \"@/services/CartService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchProducts();\r\n  },\r\n  methods: {\r\n    fetchProducts() {\r\n      ProductService.getProducts().then((response) => {\r\n        this.products = response.data;\r\n      });\r\n    },\r\n    addToCart(product) {\r\n      const userId = this.$store.state.user.id; // Assuming you have a Vuex store with user info\r\n      CartService.addToCart(userId, product.id, 1).then(() => {\r\n        this.$emit(\"product-added\", product);\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.product-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.product-card {\r\n  border: 1px solid #ccc;\r\n  padding: 16px;\r\n  margin: 16px;\r\n  width: 200px;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAc;mBAD3B;;uBACEC,mBAAA,CAOM,OAPNC,UAOM,I,kBANJD,mBAAA,CAKME,SAAA,QAPVC,WAAA,CAE2BC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAnBN,mBAAA,CAKM;MAL4BO,GAAG,EAAED,OAAO,CAACE,EAAE;MAAET,KAAK,EAAC;QACvDU,mBAAA,CAA2B,YAAAC,gBAAA,CAApBJ,OAAO,CAACK,IAAI,kBACnBF,mBAAA,CAAgC,WAAAC,gBAAA,CAA1BJ,OAAO,CAACM,WAAW,kBACzBH,mBAAA,CAAkC,WAA/B,UAAQ,GAAAC,gBAAA,CAAGJ,OAAO,CAACO,KAAK,kBAC3BJ,mBAAA,CAAwD;MAA/CK,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,SAAS,CAACX,OAAO;OAAG,aAAW,iBANrDY,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}