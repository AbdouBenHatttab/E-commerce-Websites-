{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport CartService from '@/services/CartService';\nimport AuthService from '@/services/AuthService';\nexport default {\n  name: 'UserCart',\n  data() {\n    return {\n      cartItems: [],\n      userId: null,\n      taxRate: 0.05 // Example tax rate\n    };\n  },\n  computed: {\n    itemCount() {\n      return this.cartItems.reduce((acc, item) => acc + item.quantity, 0);\n    },\n    subtotal() {\n      return this.cartItems.reduce((acc, item) => acc + item.product.price * item.quantity, 0).toFixed(2);\n    },\n    tax() {\n      return (parseFloat(this.subtotal) * this.taxRate).toFixed(2);\n    },\n    total() {\n      return (parseFloat(this.subtotal) + parseFloat(this.tax)).toFixed(2);\n    }\n  },\n  async created() {\n    const user = AuthService.getCurrentUser();\n    if (user) {\n      this.userId = user.id;\n      await this.fetchCartItems();\n    } else {\n      console.error('User is not logged in');\n    }\n  },\n  methods: {\n    async fetchCartItems() {\n      try {\n        const response = await CartService.getCart(this.userId);\n        console.log('Cart response:', response.data); // Debugging\n\n        this.cartItems = response.data.items.map(item => ({\n          product: {\n            id: item.productId,\n            name: item.productName,\n            price: item.price,\n            imageUrl: item.imageUrl // Ensure this is coming correctly\n          },\n          quantity: item.quantity\n        }));\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n      }\n    },\n    async removeFromCart(productId) {\n      try {\n        await CartService.removeFromCart(productId); // FIXED: Removed userId from params\n        this.cartItems = this.cartItems.filter(item => item.product.id !== productId);\n      } catch (error) {\n        console.error('Error removing item from cart:', error);\n      }\n    },\n    async updateQuantity(productId, newQuantity) {\n      if (newQuantity < 1) return;\n      try {\n        await CartService.updateQuantity(productId, newQuantity);\n        const item = this.cartItems.find(i => i.product.id === productId);\n        if (item) item.quantity = newQuantity;\n      } catch (error) {\n        console.error('Error updating quantity:', error);\n      }\n    },\n    proceedToCheckout() {\n      alert('Proceeding to checkout...');\n    }\n  }\n};","map":{"version":3,"names":["CartService","AuthService","name","data","cartItems","userId","taxRate","computed","itemCount","reduce","acc","item","quantity","subtotal","product","price","toFixed","tax","parseFloat","total","created","user","getCurrentUser","id","fetchCartItems","console","error","methods","response","getCart","log","items","map","productId","productName","imageUrl","removeFromCart","filter","updateQuantity","newQuantity","find","i","proceedToCheckout","alert"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\user\\UserCart.vue"],"sourcesContent":["<template>\n  <div class=\"container py-5\">\n    <!-- Cart Header -->\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\n      <h2 class=\"mb-0 display-6 fw-bold text-primary\">Shopping Cart</h2>\n      <router-link to=\"/user/\" class=\"btn btn-outline-primary\">\n        <i class=\"bi bi-arrow-left me-2\"></i>Continue Shopping\n      </router-link>\n    </div>\n\n    <!-- Empty State -->\n    <div v-if=\"cartItems.length === 0\" class=\"empty-cart text-center py-5\">\n      <div class=\"empty-icon mb-4\">\n        <i class=\"bi bi-cart-x fs-1 text-muted\"></i>\n      </div>\n      <h3 class=\"text-secondary mb-3\">Your cart is empty</h3>\n      <p class=\"text-muted\">Start adding items to see them here</p>\n    </div>\n\n    <!-- Cart Items -->\n    <div v-else class=\"cart-items\">\n      <div class=\"row g-4\">\n        <div v-for=\"item in cartItems\" :key=\"item.product.id\" class=\"col-12\">\n          <div class=\"card shadow-sm border-0 h-100\">\n            <div class=\"card-body p-4\">\n              <div class=\"row g-4 align-items-center\">\n                <!-- Product Image -->\n                <div class=\"col-md-3\">\n                  <img\n                    :src=\"item.product.imageUrl\"\n                    alt=\"Product image\"\n                    class=\"img-fluid rounded-3\"\n                    style=\"height: 150px; object-fit: cover\"\n                  />\n                </div>\n\n                <!-- Product Info -->\n                <div class=\"col-md-6\">\n                  <h5 class=\"card-title fw-bold mb-2\">\n                    {{ item.product.name }}\n                  </h5>\n                  <p class=\"text-muted mb-2\">\n                    SKU: {{ item.product.sku || 'N/A' }}\n                  </p>\n                  <div class=\"d-flex align-items-center gap-2\">\n                    <span class=\"h5 mb-0\">${{ item.product.price }}</span>\n                    <small class=\"text-muted\">each</small>\n                  </div>\n                </div>\n\n                <!-- Quantity Controls -->\n                <div class=\"col-md-3\">\n                  <div class=\"d-flex flex-column gap-3\">\n                    <div class=\"d-flex align-items-center gap-2\">\n                      <button\n                        @click=\"\n                          updateQuantity(item.product.id, item.quantity - 1)\n                        \"\n                        class=\"btn btn-outline-secondary\"\n                        :disabled=\"item.quantity <= 1\"\n                      >\n                        <i class=\"bi bi-dash\"></i>\n                      </button>\n\n                      <input\n                        type=\"number\"\n                        class=\"form-control text-center\"\n                        v-model.number=\"item.quantity\"\n                        @change=\"updateQuantity(item.product.id, item.quantity)\"\n                        min=\"1\"\n                        style=\"max-width: 70px\"\n                      />\n\n                      <button\n                        @click=\"\n                          updateQuantity(item.product.id, item.quantity + 1)\n                        \"\n                        class=\"btn btn-outline-secondary\"\n                      >\n                        <i class=\"bi bi-plus\"></i>\n                      </button>\n                    </div>\n\n                    <button\n                      @click=\"removeFromCart(item.product.id)\"\n                      class=\"btn btn-link text-danger p-0\"\n                    >\n                      <i class=\"bi bi-trash me-2\"></i>Remove\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Cart Summary -->\n      <div class=\"row mt-5\">\n        <div class=\"col-lg-4 ms-auto\">\n          <div class=\"card border-0 shadow-sm\">\n            <div class=\"card-body p-4\">\n              <h5 class=\"fw-bold mb-4\">Order Summary</h5>\n              <div class=\"d-flex justify-content-between mb-3\">\n                <span>Subtotal ({{ itemCount }} items)</span>\n                <span>${{ subtotal }}</span>\n              </div>\n              <div class=\"d-flex justify-content-between mb-4\">\n                <span>Estimated Tax</span>\n                <span>${{ tax }}</span>\n              </div>\n              <hr class=\"my-3\" />\n              <div class=\"d-flex justify-content-between fw-bold\">\n                <span>Total</span>\n                <span>${{ total }}</span>\n              </div>\n              <button\n                class=\"btn btn-primary w-100 mt-4\"\n                @click=\"proceedToCheckout\"\n              >\n                Proceed to Checkout\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CartService from '@/services/CartService';\nimport AuthService from '@/services/AuthService';\n\nexport default {\n  name: 'UserCart',\n  data() {\n    return {\n      cartItems: [],\n      userId: null,\n      taxRate: 0.05, // Example tax rate\n    };\n  },\n  computed: {\n    itemCount() {\n      return this.cartItems.reduce((acc, item) => acc + item.quantity, 0);\n    },\n    subtotal() {\n      return this.cartItems\n        .reduce((acc, item) => acc + item.product.price * item.quantity, 0)\n        .toFixed(2);\n    },\n    tax() {\n      return (parseFloat(this.subtotal) * this.taxRate).toFixed(2);\n    },\n    total() {\n      return (parseFloat(this.subtotal) + parseFloat(this.tax)).toFixed(2);\n    },\n  },\n  async created() {\n    const user = AuthService.getCurrentUser();\n    if (user) {\n      this.userId = user.id;\n      await this.fetchCartItems();\n    } else {\n      console.error('User is not logged in');\n    }\n  },\n  methods: {\n    async fetchCartItems() {\n      try {\n        const response = await CartService.getCart(this.userId);\n        console.log('Cart response:', response.data); // Debugging\n\n        this.cartItems = response.data.items.map((item) => ({\n          product: {\n            id: item.productId,\n            name: item.productName,\n            price: item.price,\n            imageUrl: item.imageUrl, // Ensure this is coming correctly\n          },\n          quantity: item.quantity,\n        }));\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n      }\n    },\n    async removeFromCart(productId) {\n      try {\n        await CartService.removeFromCart(productId); // FIXED: Removed userId from params\n        this.cartItems = this.cartItems.filter(\n          (item) => item.product.id !== productId\n        );\n      } catch (error) {\n        console.error('Error removing item from cart:', error);\n      }\n    },\n    async updateQuantity(productId, newQuantity) {\n      if (newQuantity < 1) return;\n      try {\n        await CartService.updateQuantity(productId, newQuantity);\n        const item = this.cartItems.find((i) => i.product.id === productId);\n        if (item) item.quantity = newQuantity;\n      } catch (error) {\n        console.error('Error updating quantity:', error);\n      }\n    },\n    proceedToCheckout() {\n      alert('Proceeding to checkout...');\n    },\n  },\n};\n</script>\n\n<style scoped>\n.cart-items {\n  transition: all 0.3s ease;\n}\n.card {\n  border-radius: 12px;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n.card:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);\n}\n.btn-outline-secondary {\n  border-radius: 8px;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n</style>\n"],"mappings":";;;;;AAmIA,OAAOA,WAAU,MAAO,wBAAwB;AAChD,OAAOC,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,IAAI;MACZC,OAAO,EAAE,IAAI,CAAE;IACjB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACJ,SAAS,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAE,GAAIC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IACrE,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACT,SAAQ,CACjBK,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAE,GAAIC,IAAI,CAACG,OAAO,CAACC,KAAI,GAAIJ,IAAI,CAACC,QAAQ,EAAE,CAAC,EACjEI,OAAO,CAAC,CAAC,CAAC;IACf,CAAC;IACDC,GAAGA,CAAA,EAAG;MACJ,OAAO,CAACC,UAAU,CAAC,IAAI,CAACL,QAAQ,IAAI,IAAI,CAACP,OAAO,EAAEU,OAAO,CAAC,CAAC,CAAC;IAC9D,CAAC;IACDG,KAAKA,CAAA,EAAG;MACN,OAAO,CAACD,UAAU,CAAC,IAAI,CAACL,QAAQ,IAAIK,UAAU,CAAC,IAAI,CAACD,GAAG,CAAC,EAAED,OAAO,CAAC,CAAC,CAAC;IACtE;EACF,CAAC;EACD,MAAMI,OAAOA,CAAA,EAAG;IACd,MAAMC,IAAG,GAAIpB,WAAW,CAACqB,cAAc,CAAC,CAAC;IACzC,IAAID,IAAI,EAAE;MACR,IAAI,CAAChB,MAAK,GAAIgB,IAAI,CAACE,EAAE;MACrB,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;IAC7B,OAAO;MACLC,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;IACxC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMH,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMI,QAAO,GAAI,MAAM5B,WAAW,CAAC6B,OAAO,CAAC,IAAI,CAACxB,MAAM,CAAC;QACvDoB,OAAO,CAACK,GAAG,CAAC,gBAAgB,EAAEF,QAAQ,CAACzB,IAAI,CAAC,EAAE;;QAE9C,IAAI,CAACC,SAAQ,GAAIwB,QAAQ,CAACzB,IAAI,CAAC4B,KAAK,CAACC,GAAG,CAAErB,IAAI,KAAM;UAClDG,OAAO,EAAE;YACPS,EAAE,EAAEZ,IAAI,CAACsB,SAAS;YAClB/B,IAAI,EAAES,IAAI,CAACuB,WAAW;YACtBnB,KAAK,EAAEJ,IAAI,CAACI,KAAK;YACjBoB,QAAQ,EAAExB,IAAI,CAACwB,QAAQ,CAAE;UAC3B,CAAC;UACDvB,QAAQ,EAAED,IAAI,CAACC;QACjB,CAAC,CAAC,CAAC;MACL,EAAE,OAAOc,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACD,MAAMU,cAAcA,CAACH,SAAS,EAAE;MAC9B,IAAI;QACF,MAAMjC,WAAW,CAACoC,cAAc,CAACH,SAAS,CAAC,EAAE;QAC7C,IAAI,CAAC7B,SAAQ,GAAI,IAAI,CAACA,SAAS,CAACiC,MAAM,CACnC1B,IAAI,IAAKA,IAAI,CAACG,OAAO,CAACS,EAAC,KAAMU,SAChC,CAAC;MACH,EAAE,OAAOP,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IACD,MAAMY,cAAcA,CAACL,SAAS,EAAEM,WAAW,EAAE;MAC3C,IAAIA,WAAU,GAAI,CAAC,EAAE;MACrB,IAAI;QACF,MAAMvC,WAAW,CAACsC,cAAc,CAACL,SAAS,EAAEM,WAAW,CAAC;QACxD,MAAM5B,IAAG,GAAI,IAAI,CAACP,SAAS,CAACoC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAAC3B,OAAO,CAACS,EAAC,KAAMU,SAAS,CAAC;QACnE,IAAItB,IAAI,EAAEA,IAAI,CAACC,QAAO,GAAI2B,WAAW;MACvC,EAAE,OAAOb,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDgB,iBAAiBA,CAAA,EAAG;MAClBC,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}