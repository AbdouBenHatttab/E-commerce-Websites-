{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport CartService from '@/services/CartService';\nimport AuthService from '@/services/AuthService';\nexport default {\n  data() {\n    return {\n      cartItems: [],\n      userId: null,\n      isLoading: true\n    };\n  },\n  computed: {\n    filteredCartItems() {\n      return this.cartItems.filter(item => item.product); // Ensure product exists\n    }\n  },\n  async created() {\n    try {\n      const user = AuthService.getCurrentUser();\n      this.userId = user?.id;\n      if (!this.userId) return;\n      const response = await CartService.getCart(this.userId);\n      this.cartItems = response.data.items || [];\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n    } finally {\n      this.isLoading = false;\n    }\n  },\n  methods: {\n    async removeFromCart(productId) {\n      try {\n        await CartService.removeFromCart(this.userId, productId);\n        this.cartItems = this.cartItems.filter(item => item.product.id !== productId);\n      } catch (error) {\n        console.error('Error removing item:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["CartService","AuthService","data","cartItems","userId","isLoading","computed","filteredCartItems","filter","item","product","created","user","getCurrentUser","id","response","getCart","items","error","console","methods","removeFromCart","productId"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\user\\UserCart.vue"],"sourcesContent":["<template>\n  <div class=\"container py-5\">\n    <h2 class=\"mb-4 text-primary\">Shopping Cart</h2>\n\n    <!-- Loading State -->\n    <div v-if=\"isLoading\" class=\"text-center py-5\">\n      <div class=\"spinner-border text-primary\" role=\"status\"></div>\n    </div>\n\n    <!-- Empty State -->\n    <div v-else-if=\"filteredCartItems.length === 0\" class=\"text-center py-5\">\n      <i class=\"bi bi-cart-x fs-1 text-muted\"></i>\n      <h3 class=\"text-secondary\">Your cart is empty</h3>\n    </div>\n\n    <!-- Cart Items -->\n    <div v-else class=\"cart-items\">\n      <div class=\"row g-4\">\n        <div\n          v-for=\"item in filteredCartItems\"\n          :key=\"item.product.id\"\n          class=\"col-12\"\n        >\n          <div class=\"card shadow-sm border-0\">\n            <div class=\"card-body p-4\">\n              <div class=\"row g-4 align-items-center\">\n                <div class=\"col-md-3\">\n                  <img\n                    :src=\"\n                      item.product.imageUrl || 'https://via.placeholder.com/200'\n                    \"\n                    class=\"img-fluid rounded-3\"\n                    style=\"height: 150px; object-fit: cover\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <h5 class=\"fw-bold\">{{ item.product.name }}</h5>\n                  <p class=\"text-muted\">Price: ${{ item.product.price }}</p>\n                </div>\n                <div class=\"col-md-3\">\n                  <button\n                    @click=\"removeFromCart(item.product.id)\"\n                    class=\"btn btn-danger\"\n                  >\n                    <i class=\"bi bi-trash\"></i> Remove\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CartService from '@/services/CartService';\nimport AuthService from '@/services/AuthService';\n\nexport default {\n  data() {\n    return {\n      cartItems: [],\n      userId: null,\n      isLoading: true,\n    };\n  },\n  computed: {\n    filteredCartItems() {\n      return this.cartItems.filter((item) => item.product); // Ensure product exists\n    },\n  },\n  async created() {\n    try {\n      const user = AuthService.getCurrentUser();\n      this.userId = user?.id;\n      if (!this.userId) return;\n      const response = await CartService.getCart(this.userId);\n      this.cartItems = response.data.items || [];\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n    } finally {\n      this.isLoading = false;\n    }\n  },\n  methods: {\n    async removeFromCart(productId) {\n      try {\n        await CartService.removeFromCart(this.userId, productId);\n        this.cartItems = this.cartItems.filter(\n          (item) => item.product.id !== productId\n        );\n      } catch (error) {\n        console.error('Error removing item:', error);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";;AAyDA,OAAOA,WAAU,MAAO,wBAAwB;AAChD,OAAOC,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACJ,SAAS,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,CAAC,EAAE;IACxD;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,IAAG,GAAIX,WAAW,CAACY,cAAc,CAAC,CAAC;MACzC,IAAI,CAACT,MAAK,GAAIQ,IAAI,EAAEE,EAAE;MACtB,IAAI,CAAC,IAAI,CAACV,MAAM,EAAE;MAClB,MAAMW,QAAO,GAAI,MAAMf,WAAW,CAACgB,OAAO,CAAC,IAAI,CAACZ,MAAM,CAAC;MACvD,IAAI,CAACD,SAAQ,GAAIY,QAAQ,CAACb,IAAI,CAACe,KAAI,IAAK,EAAE;IAC5C,EAAE,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,UAAU;MACR,IAAI,CAACb,SAAQ,GAAI,KAAK;IACxB;EACF,CAAC;EACDe,OAAO,EAAE;IACP,MAAMC,cAAcA,CAACC,SAAS,EAAE;MAC9B,IAAI;QACF,MAAMtB,WAAW,CAACqB,cAAc,CAAC,IAAI,CAACjB,MAAM,EAAEkB,SAAS,CAAC;QACxD,IAAI,CAACnB,SAAQ,GAAI,IAAI,CAACA,SAAS,CAACK,MAAM,CACnCC,IAAI,IAAKA,IAAI,CAACC,OAAO,CAACI,EAAC,KAAMQ,SAChC,CAAC;MACH,EAAE,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}