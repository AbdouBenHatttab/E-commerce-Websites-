{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      error: \"\",\n      success: \"\"\n    };\n  },\n  methods: {\n    async login() {\n      // 🧹 Clear old session before login\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"token\");\n      delete axios.defaults.headers.common[\"Authorization\"];\n      try {\n        const response = await axios.post(\"http://localhost:8080/auth/login\", {\n          email: this.email,\n          password: this.password\n        });\n        const token = response.data.token;\n        const user = response.data.user || response.data; // adjust if user is nested\n\n        if (token) {\n          // ✅ Save session\n          localStorage.setItem(\"token\", token);\n          localStorage.setItem(\"user\", JSON.stringify(user));\n          axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n          this.success = \"Login successful!\";\n          this.error = \"\";\n\n          // 🔁 Redirect after short delay (or instantly if preferred)\n          setTimeout(() => {\n            this.redirectUser(\"UserDashboard\"); // replace with actual route\n          }, 1000);\n        } else {\n          this.error = \"Login failed: token not received.\";\n          this.success = \"\";\n        }\n      } catch (err) {\n        this.error = \"Invalid credentials. Please try again.\";\n        this.success = \"\";\n        console.error(\"Login failed:\", err);\n      }\n    },\n    redirectUser(routeName) {\n      this.$router.replace({\n        name: routeName\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","email","password","error","success","methods","login","localStorage","removeItem","defaults","headers","common","response","post","token","user","setItem","JSON","stringify","setTimeout","redirectUser","err","console","routeName","$router","replace"],"sources":["C:\\projet stage 2\\final\\hello-word-vue\\src\\components\\LoginPage.vue"],"sourcesContent":["<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      error: \"\",\n      success: \"\",\n    };\n  },\n  methods: {\n    async login() {\n      // 🧹 Clear old session before login\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"token\");\n      delete axios.defaults.headers.common[\"Authorization\"];\n\n      try {\n        const response = await axios.post(\"http://localhost:8080/auth/login\", {\n          email: this.email,\n          password: this.password,\n        });\n\n        const token = response.data.token;\n        const user = response.data.user || response.data; // adjust if user is nested\n\n        if (token) {\n          // ✅ Save session\n          localStorage.setItem(\"token\", token);\n          localStorage.setItem(\"user\", JSON.stringify(user));\n          axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n\n          this.success = \"Login successful!\";\n          this.error = \"\";\n\n          // 🔁 Redirect after short delay (or instantly if preferred)\n          setTimeout(() => {\n            this.redirectUser(\"UserDashboard\"); // replace with actual route\n          }, 1000);\n        } else {\n          this.error = \"Login failed: token not received.\";\n          this.success = \"\";\n        }\n      } catch (err) {\n        this.error = \"Invalid credentials. Please try again.\";\n        this.success = \"\";\n        console.error(\"Login failed:\", err);\n      }\n    },\n    redirectUser(routeName) {\n      this.$router.replace({ name: routeName });\n    },\n  },\n};\n</script>\n"],"mappings":"AACA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ;MACAC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;MAC/BD,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;MAChC,OAAOV,KAAK,CAACW,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;MAErD,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAAC,kCAAkC,EAAE;UACpEZ,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,MAAMY,KAAI,GAAIF,QAAQ,CAACZ,IAAI,CAACc,KAAK;QACjC,MAAMC,IAAG,GAAIH,QAAQ,CAACZ,IAAI,CAACe,IAAG,IAAKH,QAAQ,CAACZ,IAAI,EAAE;;QAElD,IAAIc,KAAK,EAAE;UACT;UACAP,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;UACpCP,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;UAClDjB,KAAK,CAACW,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,UAAUG,KAAK,EAAE;UAElE,IAAI,CAACV,OAAM,GAAI,mBAAmB;UAClC,IAAI,CAACD,KAAI,GAAI,EAAE;;UAEf;UACAgB,UAAU,CAAC,MAAM;YACf,IAAI,CAACC,YAAY,CAAC,eAAe,CAAC,EAAE;UACtC,CAAC,EAAE,IAAI,CAAC;QACV,OAAO;UACL,IAAI,CAACjB,KAAI,GAAI,mCAAmC;UAChD,IAAI,CAACC,OAAM,GAAI,EAAE;QACnB;MACF,EAAE,OAAOiB,GAAG,EAAE;QACZ,IAAI,CAAClB,KAAI,GAAI,wCAAwC;QACrD,IAAI,CAACC,OAAM,GAAI,EAAE;QACjBkB,OAAO,CAACnB,KAAK,CAAC,eAAe,EAAEkB,GAAG,CAAC;MACrC;IACF,CAAC;IACDD,YAAYA,CAACG,SAAS,EAAE;MACtB,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC;QAAE1B,IAAI,EAAEwB;MAAU,CAAC,CAAC;IAC3C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}