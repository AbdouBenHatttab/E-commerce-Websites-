{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AuthService from \"@/services/AuthService\";\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      error: null\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await AuthService.login({\n          email: this.email,\n          password: this.password\n        });\n        this.$router.push(\"/\"); // Redirect to home page after successful login\n      } catch (error) {\n        this.error = \"Invalid email or password.\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["AuthService","data","email","password","error","methods","login","response","$router","push"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\Login.vue"],"sourcesContent":["<!-- src/components/Login.vue -->\n<template>\n  <div class=\"login\">\n    <form @submit.prevent=\"login\">\n      <div class=\"mb-3\">\n        <label>Email:</label>\n        <input type=\"email\" class=\"form-control\" v-model=\"email\" required />\n      </div>\n      <div class=\"mb-3\">\n        <label>Password:</label>\n        <input type=\"password\" class=\"form-control\" v-model=\"password\" required />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary w-100\">Login</button>\n      <p class=\"mt-3 text-center\">\n        Don't have an account? <router-link to=\"/register\">Register here</router-link>\n      </p>\n    </form>\n    <div v-if=\"error\" class=\"alert alert-danger mt-3\">{{ error }}</div>\n  </div>\n</template>\n\n<script>\nimport AuthService from \"@/services/AuthService\";\n\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      error: null,\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await AuthService.login({\n          email: this.email,\n          password: this.password,\n        });\n        this.$router.push(\"/\"); // Redirect to home page after successful login\n      } catch (error) {\n        this.error = \"Invalid email or password.\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":";AAsBA,OAAOA,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,WAAW,CAACM,KAAK,CAAC;UACvCJ,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACF,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;MAC1B,EAAE,OAAOL,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,4BAA4B;MAC3C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}