{"ast":null,"code":"import axios from \"axios\";\nconst auth_url = \"http://localhost:8080/auth\";\nclass AuthService {\n  static getToken() {\n    return localStorage.getItem(\"token\");\n  }\n  static getUserId() {\n    return localStorage.getItem(\"userId\"); // Ensure userId is stored on login\n  }\n  static login(credentials) {\n    return axios.post(\"http://localhost:8080/auth/login\", credentials).then(response => {\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(\"userId\", response.data.userId); // Store userId\n      return response.data;\n    });\n  }\n  logout() {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"authToken\");\n  }\n  register(user) {\n    return axios.post(auth_url + \"/register\", {\n      name: user.name,\n      email: user.email,\n      password: user.password\n    });\n  }\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","auth_url","AuthService","getToken","localStorage","getItem","getUserId","login","credentials","post","then","response","setItem","data","token","userId","logout","removeItem","register","user","name","email","password","getCurrentUser","JSON","parse"],"sources":["C:/Users/Hedib/OneDrive/Bureau/hello-word-vue/src/services/AuthService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst auth_url = \"http://localhost:8080/auth\";\n\nclass AuthService {\n  static getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  static getUserId() {\n    return localStorage.getItem(\"userId\"); // Ensure userId is stored on login\n  }\n\n  static login(credentials) {\n    return axios\n      .post(\"http://localhost:8080/auth/login\", credentials)\n      .then((response) => {\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"userId\", response.data.userId); // Store userId\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"authToken\");\n  }\n\n  register(user) {\n    return axios.post(auth_url + \"/register\", {\n      name: user.name,\n      email: user.email,\n      password: user.password,\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n}\n\nexport default new AuthService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,4BAA4B;AAE7C,MAAMC,WAAW,CAAC;EAChB,OAAOC,QAAQA,CAAA,EAAG;IAChB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtC;EAEA,OAAOC,SAASA,CAAA,EAAG;IACjB,OAAOF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;EACzC;EAEA,OAAOE,KAAKA,CAACC,WAAW,EAAE;IACxB,OAAOR,KAAK,CACTS,IAAI,CAAC,kCAAkC,EAAED,WAAW,CAAC,CACrDE,IAAI,CAAEC,QAAQ,IAAK;MAClBP,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAED,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MAClDV,YAAY,CAACQ,OAAO,CAAC,QAAQ,EAAED,QAAQ,CAACE,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;MACtD,OAAOJ,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC;EACN;EAEAG,MAAMA,CAAA,EAAG;IACPZ,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;IAC/Bb,YAAY,CAACa,UAAU,CAAC,WAAW,CAAC;EACtC;EAEAC,QAAQA,CAACC,IAAI,EAAE;IACb,OAAOnB,KAAK,CAACS,IAAI,CAACR,QAAQ,GAAG,WAAW,EAAE;MACxCmB,IAAI,EAAED,IAAI,CAACC,IAAI;MACfC,KAAK,EAAEF,IAAI,CAACE,KAAK;MACjBC,QAAQ,EAAEH,IAAI,CAACG;IACjB,CAAC,CAAC;EACJ;EAEAC,cAAcA,CAAA,EAAG;IACf,OAAOC,IAAI,CAACC,KAAK,CAACrB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACjD;AACF;AAEA,eAAe,IAAIH,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}