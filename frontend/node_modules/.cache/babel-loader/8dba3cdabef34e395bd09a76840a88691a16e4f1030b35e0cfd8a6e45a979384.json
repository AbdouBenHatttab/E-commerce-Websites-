{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Product List\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: product.id\n    }, [_createTextVNode(_toDisplayString(product.name) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.addToCart(product.id)\n    }, \"Add to Cart\", 8 /* PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","products","product","key","id","_createTextVNode","_toDisplayString","name","onClick","$event","$options","addToCart","_hoisted_2"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\user\\ProductList.vue"],"sourcesContent":["<!-- src/components/user/ProductList.vue -->\n<template>\n  <div class=\"container mt-5\">\n    <h2>Product List</h2>\n    <ul>\n      <li v-for=\"product in products\" :key=\"product.id\">\n        {{ product.name }}\n        <button @click=\"addToCart(product.id)\">Add to Cart</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport ProductService from \"@/services/ProductService\";\nimport CartService from \"@/services/CartService\";\nimport AuthService from \"@/services/AuthService\";\n\nexport default {\n  name: \"ProductList\",\n  data() {\n    return {\n      products: [],\n      userId: null,\n    };\n  },\n  async created() {\n    this.userId = AuthService.getCurrentUser().id;\n    await this.fetchProducts();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await ProductService.getProducts();\n        this.products = response.data;\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      }\n    },\n    async addToCart(productId) {\n      try {\n        await CartService.addToCart(this.userId, productId);\n        console.log(\"Product added to cart\");\n      } catch (error) {\n        console.error(\"Error adding to cart:\", error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":";;EAEOA,KAAK,EAAC;AAAgB;mBAF7B;;uBAEEC,mBAAA,CAQM,OARNC,UAQM,G,0BAPJC,mBAAA,CAAqB,YAAjB,cAAY,sBAChBA,mBAAA,CAKK,c,kBAJHF,mBAAA,CAGKG,SAAA,QARXC,WAAA,CAK4BC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAlBP,mBAAA,CAGK;MAH4BQ,GAAG,EAAED,OAAO,CAACE;QALpDC,gBAAA,CAAAC,gBAAA,CAMWJ,OAAO,CAACK,IAAI,IAAG,GAClB,iBAAAV,mBAAA,CAA2D;MAAlDW,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,SAAS,CAACT,OAAO,CAACE,EAAE;OAAG,aAAW,iBAP1DQ,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}