{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport AuthService from '@/services/AuthService';\n\n// Public components\nconst Home = () => import('@/components/HomePage.vue');\nconst Login = () => import('@/components/LoginPage.vue');\nconst Register = () => import('@/components/RegisterPage.vue');\nconst ContactUs = () => import('@/components/ContactUs.vue');\n\n// Admin components\nconst AdminDashboard = () => import('@/components/admin/AdminDashboard.vue');\nconst AdminProfile = () => import('@/components/admin/AdminProfile.vue');\nconst AdminUsers = () => import('@/components/admin/AdminUsers.vue');\nconst AdminProducts = () => import('@/components/admin/AdminProducts.vue');\nconst ContactMessages = () => import('@/components/admin/ContactMessages.vue');\n\n// User components\nconst UserDashboard = () => import('@/components/user/UserDashboard.vue');\nconst UserProfile = () => import('@/components/user/UserProfile.vue');\nconst ProductList = () => import('@/components/user/ProductList.vue');\nconst UserCart = () => import('@/components/user/UserCart.vue');\nconst ProductDetail = () => import('@/components/user/ProductDetail.vue');\nconst routes = [\n// Public routes\n{\n  path: '/',\n  name: 'Home',\n  component: Home\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  meta: {\n    guest: true\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register,\n  meta: {\n    guest: true\n  }\n}, {\n  path: '/contact',\n  name: 'ContactUs',\n  component: ContactUs\n},\n// Admin routes\n{\n  path: '/admin',\n  meta: {\n    requiresAuth: true,\n    role: 'ROLE_ADMIN'\n  },\n  children: [{\n    path: 'dashboard',\n    name: 'AdminDashboard',\n    component: AdminDashboard\n  }, {\n    path: 'profile',\n    name: 'AdminProfile',\n    component: AdminProfile\n  }, {\n    path: 'users',\n    name: 'AdminUsers',\n    component: AdminUsers\n  }, {\n    path: 'products',\n    name: 'AdminProducts',\n    component: AdminProducts\n  }, {\n    path: 'messages',\n    name: 'Messages',\n    component: ContactMessages\n  }]\n},\n// User routes\n{\n  path: '/user',\n  meta: {\n    requiresAuth: true,\n    role: 'ROLE_USER'\n  },\n  children: [{\n    path: 'dashboard',\n    name: 'UserDashboard',\n    component: UserDashboard\n  }, {\n    path: 'profile',\n    name: 'UserProfile',\n    component: UserProfile\n  }, {\n    path: 'products',\n    name: 'ProductList',\n    component: ProductList\n  }, {\n    path: 'cart',\n    name: 'UserCart',\n    component: UserCart\n  }, {\n    path: 'product/:id',\n    name: 'ProductDetail',\n    component: ProductDetail,\n    props: true\n  }]\n},\n// Redirects\n{\n  path: '/:pathMatch(.*)*',\n  redirect: '/'\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n  scrollBehavior(to, from, savedPosition) {\n    return savedPosition || {\n      top: 0\n    };\n  }\n});\nrouter.beforeEach(async (to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const guestOnly = to.matched.some(record => record.meta.guest);\n  const user = AuthService.getCurrentUser();\n\n  // Redirect authenticated users from guest pages\n  if (user && guestOnly) {\n    return next(user.role === 'ROLE_ADMIN' ? '/admin/dashboard' : '/user/dashboard');\n  }\n\n  // Handle auth required routes\n  if (requiresAuth) {\n    if (!user) {\n      return next({\n        name: 'Login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    }\n\n    // Check role-based access\n    const requiredRole = to.meta.role;\n    if (requiredRole && user.role !== requiredRole) {\n      return next({\n        name: 'Home'\n      });\n    }\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","AuthService","Home","Login","Register","ContactUs","AdminDashboard","AdminProfile","AdminUsers","AdminProducts","ContactMessages","UserDashboard","UserProfile","ProductList","UserCart","ProductDetail","routes","path","name","component","meta","guest","requiresAuth","role","children","props","redirect","router","history","process","env","BASE_URL","scrollBehavior","to","from","savedPosition","top","beforeEach","next","matched","some","record","guestOnly","user","getCurrentUser","query","fullPath","requiredRole"],"sources":["C:/Users/Hedib/OneDrive/Bureau/hello-word-vue/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport AuthService from '@/services/AuthService';\n\n// Public components\nconst Home = () => import('@/components/HomePage.vue');\nconst Login = () => import('@/components/LoginPage.vue');\nconst Register = () => import('@/components/RegisterPage.vue');\nconst ContactUs = () => import('@/components/ContactUs.vue');\n\n// Admin components\nconst AdminDashboard = () => import('@/components/admin/AdminDashboard.vue');\nconst AdminProfile = () => import('@/components/admin/AdminProfile.vue');\nconst AdminUsers = () => import('@/components/admin/AdminUsers.vue');\nconst AdminProducts = () => import('@/components/admin/AdminProducts.vue');\nconst ContactMessages = () => import('@/components/admin/ContactMessages.vue');\n\n// User components\nconst UserDashboard = () => import('@/components/user/UserDashboard.vue');\nconst UserProfile = () => import('@/components/user/UserProfile.vue');\nconst ProductList = () => import('@/components/user/ProductList.vue');\nconst UserCart = () => import('@/components/user/UserCart.vue');\nconst ProductDetail = () => import('@/components/user/ProductDetail.vue');\n\nconst routes = [\n  // Public routes\n  { path: '/', name: 'Home', component: Home },\n  { path: '/login', name: 'Login', component: Login, meta: { guest: true } },\n  {\n    path: '/register',\n    name: 'Register',\n    component: Register,\n    meta: { guest: true },\n  },\n  { path: '/contact', name: 'ContactUs', component: ContactUs },\n\n  // Admin routes\n  {\n    path: '/admin',\n    meta: { requiresAuth: true, role: 'ROLE_ADMIN' },\n    children: [\n      { path: 'dashboard', name: 'AdminDashboard', component: AdminDashboard },\n      { path: 'profile', name: 'AdminProfile', component: AdminProfile },\n      { path: 'users', name: 'AdminUsers', component: AdminUsers },\n      { path: 'products', name: 'AdminProducts', component: AdminProducts },\n      { path: 'messages', name: 'Messages', component: ContactMessages },\n    ],\n  },\n\n  // User routes\n  {\n    path: '/user',\n    meta: { requiresAuth: true, role: 'ROLE_USER' },\n    children: [\n      { path: 'dashboard', name: 'UserDashboard', component: UserDashboard },\n      { path: 'profile', name: 'UserProfile', component: UserProfile },\n      { path: 'products', name: 'ProductList', component: ProductList },\n      { path: 'cart', name: 'UserCart', component: UserCart },\n      {\n        path: 'product/:id',\n        name: 'ProductDetail',\n        component: ProductDetail,\n        props: true,\n      },\n    ],\n  },\n\n  // Redirects\n  { path: '/:pathMatch(.*)*', redirect: '/' },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n  scrollBehavior(to, from, savedPosition) {\n    return savedPosition || { top: 0 };\n  },\n});\n\nrouter.beforeEach(async (to, from, next) => {\n  const requiresAuth = to.matched.some((record) => record.meta.requiresAuth);\n  const guestOnly = to.matched.some((record) => record.meta.guest);\n  const user = AuthService.getCurrentUser();\n\n  // Redirect authenticated users from guest pages\n  if (user && guestOnly) {\n    return next(\n      user.role === 'ROLE_ADMIN' ? '/admin/dashboard' : '/user/dashboard'\n    );\n  }\n\n  // Handle auth required routes\n  if (requiresAuth) {\n    if (!user) {\n      return next({\n        name: 'Login',\n        query: { redirect: to.fullPath },\n      });\n    }\n\n    // Check role-based access\n    const requiredRole = to.meta.role;\n    if (requiredRole && user.role !== requiredRole) {\n      return next({ name: 'Home' });\n    }\n  }\n\n  next();\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}