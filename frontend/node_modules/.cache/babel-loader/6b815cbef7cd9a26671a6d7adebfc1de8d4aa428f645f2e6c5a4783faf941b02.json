{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Manage Users\", -1 /* HOISTED */)), $data.users.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[1] || (_cache[1] = [_createElementVNode(\"p\", null, \"No users found.\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: user.id\n    }, [_createTextVNode(_toDisplayString(user.name) + \" - \" + _toDisplayString(user.email) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteUser(user.id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))])])), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goBack && $options.goBack(...args))\n  }, \"Back to Dashboard\")]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","$data","users","length","_hoisted_1","_cache","_hoisted_2","_Fragment","_renderList","user","id","_createTextVNode","_toDisplayString","name","email","onClick","$event","$options","deleteUser","_hoisted_3","args","goBack"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\admin\\AdminUsers.vue"],"sourcesContent":["<!-- src/components/admin/AdminUsers.vue -->\n<template>\n  <div>\n    <h2>Manage Users</h2>\n    <div v-if=\"users.length === 0\">\n      <p>No users found.</p>\n    </div>\n    <div v-else>\n      <ul>\n        <li v-for=\"user in users\" :key=\"user.id\">\n          {{ user.name }} - {{ user.email }}\n          <button @click=\"deleteUser(user.id)\">Delete</button>\n        </li>\n      </ul>\n    </div>\n    <button @click=\"goBack\">Back to Dashboard</button>\n  </div>\n</template>\n\n<script>\nimport UserService from \"@/services/UserService\";\n\nexport default {\n  name: \"AdminUsers\",\n  data() {\n    return {\n      users: [],\n    };\n  },\n  async created() {\n    try {\n      const response = await UserService.getAllUsers();\n      this.users = response.data;\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  },\n  methods: {\n    async deleteUser(id) {\n      try {\n        await UserService.deleteUser(id);\n        this.users = this.users.filter((user) => user.id !== id);\n      } catch (error) {\n        console.error(\"Error deleting user:\", error);\n      }\n    },\n    goBack() {\n      this.$router.push({ name: \"AdminDashboard\" });\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;mBAAA;;uBAEEC,mBAAA,CAcM,c,0BAbJC,mBAAA,CAAqB,YAAjB,cAAY,sBACLC,KAAA,CAAAC,KAAK,CAACC,MAAM,U,cAAvBJ,mBAAA,CAEM,OANVK,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAKML,mBAAA,CAAsB,WAAnB,iBAAe,oB,qBAEpBD,mBAAA,CAOM,OAdVO,UAAA,GAQMN,mBAAA,CAKK,c,kBAJHD,mBAAA,CAGKQ,SAAA,QAZbC,WAAA,CAS2BP,KAAA,CAAAC,KAAK,EAAbO,IAAI;yBAAfV,mBAAA,CAGK;MAHsBD,GAAG,EAAEW,IAAI,CAACC;QAT7CC,gBAAA,CAAAC,gBAAA,CAUaH,IAAI,CAACI,IAAI,IAAG,KAAG,GAAAD,gBAAA,CAAGH,IAAI,CAACK,KAAK,IAAG,GAClC,iBAAAd,mBAAA,CAAoD;MAA3Ce,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACT,IAAI,CAACC,EAAE;OAAG,QAAM,iBAXrDS,UAAA,E;uCAeInB,mBAAA,CAAkD;IAAzCe,OAAK,EAAAV,MAAA,QAAAA,MAAA,UAAAe,IAAA,KAAEH,QAAA,CAAAI,MAAA,IAAAJ,QAAA,CAAAI,MAAA,IAAAD,IAAA,CAAM;KAAE,mBAAiB,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}