{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '@/components/Home.vue';\nimport Login from '@/components/Login.vue';\nimport Register from '@/components/Register.vue';\n\n// Admin pages\nimport AdminDashboard from '@/components/admin/AdminDashboard.vue';\nimport AdminProfile from '@/components/admin/AdminProfile.vue';\nimport AdminUsers from '@/components/admin/AdminUsers.vue';\nimport AdminProducts from '@/components/admin/AdminProducts.vue';\n\n// User pages\nimport UserDashboard from '@/components/user/UserDashboard.vue';\nimport UserProfile from '@/components/user/UserProfile.vue';\nimport ProductList from '@/components/user/ProductList.vue';\nimport UserCart from '@/components/user/UserCart.vue';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register\n},\n// Admin routes\n{\n  path: '/admin/dashboard',\n  name: 'AdminDashboard',\n  component: AdminDashboard,\n  meta: {\n    requiresAuth: true,\n    role: 'ROLE_ADMIN'\n  }\n}, {\n  path: '/admin/profile',\n  name: 'AdminProfile',\n  component: AdminProfile,\n  meta: {\n    requiresAuth: true,\n    role: 'ROLE_ADMIN'\n  }\n}, {\n  path: '/admin/users',\n  name: 'AdminUsers',\n  component: AdminUsers,\n  meta: {\n    requiresAuth: true,\n    role: 'ROLE_ADMIN'\n  }\n}, {\n  path: '/admin/products',\n  name: 'AdminProducts',\n  component: AdminProducts,\n  meta: {\n    requiresAuth: true,\n    role: 'ROLE_ADMIN'\n  }\n},\n// User routes\n{\n  path: '/user/dashboard',\n  name: 'UserDashboard',\n  component: UserDashboard,\n  meta: {\n    requiresAuth: true,\n    role: 'ROLE_USER'\n  }\n}, {\n  path: '/user/profile',\n  name: 'UserProfile',\n  component: UserProfile,\n  meta: {\n    requiresAuth: true,\n    role: 'ROLE_USER'\n  }\n}, {\n  path: '/user/products',\n  name: 'ProductList',\n  component: ProductList,\n  meta: {\n    requiresAuth: true,\n    role: 'ROLE_USER'\n  }\n}, {\n  path: '/user/cart',\n  name: 'UserCart',\n  component: UserCart,\n  meta: {\n    requiresAuth: true,\n    role: 'ROLE_USER'\n  }\n}];\nconst publicPages = ['/', '/login', '/register'];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Navigation guard\nrouter.beforeEach((to, from, next) => {\n  const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n\n  // If user is logged in and trying to access a public page, redirect them to their dashboard.\n  if (user && publicPages.includes(to.path)) {\n    if (user.role === 'ROLE_ADMIN') {\n      return next('/admin/dashboard');\n    } else if (user.role === 'ROLE_USER') {\n      return next('/user/dashboard');\n    }\n  }\n\n  // If route requires authentication and user is not logged in, redirect to login.\n  if (to.meta.requiresAuth && !user) {\n    return next('/login');\n  }\n\n  // If route requires a specific role, ensure the logged-in user has that role.\n  if (to.meta.role && user && user.role !== to.meta.role) {\n    if (user.role === 'ROLE_ADMIN') {\n      return next('/admin/dashboard');\n    } else if (user.role === 'ROLE_USER') {\n      return next('/user/dashboard');\n    }\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","Login","Register","AdminDashboard","AdminProfile","AdminUsers","AdminProducts","UserDashboard","UserProfile","ProductList","UserCart","routes","path","name","component","meta","requiresAuth","role","publicPages","router","history","beforeEach","to","from","next","user","localStorage","getItem","JSON","parse","includes"],"sources":["C:/Users/Hedib/OneDrive/Bureau/hello-word-vue/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '@/components/Home.vue';\nimport Login from '@/components/Login.vue';\nimport Register from '@/components/Register.vue';\n\n// Admin pages\nimport AdminDashboard from '@/components/admin/AdminDashboard.vue';\nimport AdminProfile from '@/components/admin/AdminProfile.vue';\nimport AdminUsers from '@/components/admin/AdminUsers.vue';\nimport AdminProducts from '@/components/admin/AdminProducts.vue';\n\n// User pages\nimport UserDashboard from '@/components/user/UserDashboard.vue';\nimport UserProfile from '@/components/user/UserProfile.vue';\nimport ProductList from '@/components/user/ProductList.vue';\nimport UserCart from '@/components/user/UserCart.vue';\n\nconst routes = [\n  { path: '/', name: 'Home', component: Home },\n  { path: '/login', name: 'Login', component: Login },\n  { path: '/register', name: 'Register', component: Register },\n  // Admin routes\n  { path: '/admin/dashboard', name: 'AdminDashboard', component: AdminDashboard, meta: { requiresAuth: true, role: 'ROLE_ADMIN' } },\n  { path: '/admin/profile', name: 'AdminProfile', component: AdminProfile, meta: { requiresAuth: true, role: 'ROLE_ADMIN' } },\n  { path: '/admin/users', name: 'AdminUsers', component: AdminUsers, meta: { requiresAuth: true, role: 'ROLE_ADMIN' } },\n  { path: '/admin/products', name: 'AdminProducts', component: AdminProducts, meta: { requiresAuth: true, role: 'ROLE_ADMIN' } },\n  // User routes\n  { path: '/user/dashboard', name: 'UserDashboard', component: UserDashboard, meta: { requiresAuth: true, role: 'ROLE_USER' } },\n  { path: '/user/profile', name: 'UserProfile', component: UserProfile, meta: { requiresAuth: true, role: 'ROLE_USER' } },\n  { path: '/user/products', name: 'ProductList', component: ProductList, meta: { requiresAuth: true, role: 'ROLE_USER' } },\n  { path: '/user/cart', name: 'UserCart', component: UserCart, meta: { requiresAuth: true, role: 'ROLE_USER' } },\n];\n\nconst publicPages = ['/', '/login', '/register'];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\n// Navigation guard\nrouter.beforeEach((to, from, next) => {\n  const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n\n  // If user is logged in and trying to access a public page, redirect them to their dashboard.\n  if (user && publicPages.includes(to.path)) {\n    if (user.role === 'ROLE_ADMIN') {\n      return next('/admin/dashboard');\n    } else if (user.role === 'ROLE_USER') {\n      return next('/user/dashboard');\n    }\n  }\n\n  // If route requires authentication and user is not logged in, redirect to login.\n  if (to.meta.requiresAuth && !user) {\n    return next('/login');\n  }\n\n  // If route requires a specific role, ensure the logged-in user has that role.\n  if (to.meta.role && user && user.role !== to.meta.role) {\n    if (user.role === 'ROLE_ADMIN') {\n      return next('/admin/dashboard');\n    } else if (user.role === 'ROLE_USER') {\n      return next('/user/dashboard');\n    }\n  }\n\n  next();\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}