{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport ProductService from '@/services/ProductService';\nexport default {\n  name: 'AdminProducts',\n  data() {\n    return {\n      products: [],\n      currentProduct: {\n        name: '',\n        description: '',\n        price: 0,\n        stock: 0,\n        imageUrl: ''\n      },\n      editingProduct: null,\n      isModalVisible: false,\n      loading: false,\n      error: ''\n    };\n  },\n  async mounted() {\n    await this.fetchProducts();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await ProductService.getAllProducts();\n        this.products = response.data;\n      } catch (error) {\n        this.showError('Failed to fetch products');\n      }\n    },\n    showAddProductModal() {\n      this.editingProduct = null;\n      this.currentProduct = {\n        name: '',\n        description: '',\n        price: 0,\n        stock: 0,\n        imageUrl: ''\n      };\n      this.isModalVisible = true;\n    },\n    editProduct(product) {\n      this.editingProduct = product;\n      this.currentProduct = {\n        ...product\n      };\n      this.isModalVisible = true;\n    },\n    async saveProduct() {\n      if (!this.validateForm()) return;\n      this.loading = true;\n      try {\n        if (this.editingProduct) {\n          await ProductService.updateProduct(this.editingProduct.id, this.currentProduct);\n          const index = this.products.findIndex(p => p.id === this.editingProduct.id);\n          this.products.splice(index, 1, {\n            ...this.currentProduct,\n            id: this.editingProduct.id\n          });\n        } else {\n          const response = await ProductService.createProduct(this.currentProduct);\n          this.products.push(response.data);\n        }\n        this.closeModal();\n      } catch (error) {\n        this.showError('Failed to save product');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async confirmDelete(id) {\n      if (confirm('Are you sure you want to delete this product?')) {\n        try {\n          await ProductService.deleteProduct(id);\n          this.products = this.products.filter(p => p.id !== id);\n        } catch (error) {\n          this.showError('Failed to delete product');\n        }\n      }\n    },\n    showError(message) {\n      alert(message);\n    },\n    validateForm() {\n      // Implement form validation logic\n      return true;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    }\n  }\n};","map":{"version":3,"names":["ProductService","name","data","products","currentProduct","description","price","stock","imageUrl","editingProduct","isModalVisible","loading","error","mounted","fetchProducts","methods","response","getAllProducts","showError","showAddProductModal","editProduct","product","saveProduct","validateForm","updateProduct","id","index","findIndex","p","splice","createProduct","push","closeModal","confirmDelete","confirm","deleteProduct","filter","message","alert"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\admin\\AdminProducts.vue"],"sourcesContent":["<!-- src/components/admin/AdminProducts.vue -->\n<template>\n  <div>\n    <h1>Admin Products</h1>\n    <button @click=\"showAddProductModal\">Add Product</button>\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Price</th>\n          <th>Stock</th>\n          <th>Image</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"product in products\" :key=\"product.id\">\n          <td>{{ product.name }}</td>\n          <td>{{ product.description }}</td>\n          <td>{{ product.price }}</td>\n          <td>{{ product.stock }}</td>\n          <td><img :src=\"product.imageUrl\" alt=\"Product Image\" style=\"width: 50px; height: 50px; object-fit: cover;\" /></td>\n          <td>\n            <button @click=\"editProduct(product)\">Edit</button>\n            <button @click=\"confirmDelete(product.id)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Add/Edit Product Modal -->\n    <div v-if=\"isModalVisible\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\n        <h2>{{ editingProduct ? 'Edit Product' : 'Add Product' }}</h2>\n        <form @submit.prevent=\"saveProduct\">\n          <div>\n            <label for=\"name\">Name</label>\n            <input type=\"text\" v-model=\"currentProduct.name\" required />\n          </div>\n          <div>\n            <label for=\"description\">Description</label>\n            <input type=\"text\" v-model=\"currentProduct.description\" required />\n          </div>\n          <div>\n            <label for=\"price\">Price</label>\n            <input type=\"number\" v-model=\"currentProduct.price\" required />\n          </div>\n          <div>\n            <label for=\"stock\">Stock</label>\n            <input type=\"number\" v-model=\"currentProduct.stock\" required />\n          </div>\n          <div>\n            <label for=\"imageUrl\">Image URL</label>\n            <input type=\"text\" v-model=\"currentProduct.imageUrl\" />\n          </div>\n          <button type=\"submit\">{{ editingProduct ? 'Update' : 'Add' }}</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ProductService from '@/services/ProductService';\n\nexport default {\n  name: 'AdminProducts',\n  data() {\n    return {\n      products: [],\n      currentProduct: {\n        name: '',\n        description: '',\n        price: 0,\n        stock: 0,\n        imageUrl: '',\n      },\n      editingProduct: null,\n      isModalVisible: false,\n      loading: false,\n      error: '',\n    };\n  },\n  async mounted() {\n    await this.fetchProducts();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await ProductService.getAllProducts();\n        this.products = response.data;\n      } catch (error) {\n        this.showError('Failed to fetch products');\n      }\n    },\n    showAddProductModal() {\n      this.editingProduct = null;\n      this.currentProduct = {\n        name: '',\n        description: '',\n        price: 0,\n        stock: 0,\n        imageUrl: '',\n      };\n      this.isModalVisible = true;\n    },\n    editProduct(product) {\n      this.editingProduct = product;\n      this.currentProduct = { ...product };\n      this.isModalVisible = true;\n    },\n    async saveProduct() {\n      if (!this.validateForm()) return;\n\n      this.loading = true;\n      try {\n        if (this.editingProduct) {\n          await ProductService.updateProduct(\n            this.editingProduct.id,\n            this.currentProduct\n          );\n          const index = this.products.findIndex(\n            (p) => p.id === this.editingProduct.id\n          );\n          this.products.splice(index, 1, {\n            ...this.currentProduct,\n            id: this.editingProduct.id,\n          });\n        } else {\n          const response = await ProductService.createProduct(\n            this.currentProduct\n          );\n          this.products.push(response.data);\n        }\n        this.closeModal();\n      } catch (error) {\n        this.showError('Failed to save product');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async confirmDelete(id) {\n      if (confirm('Are you sure you want to delete this product?')) {\n        try {\n          await ProductService.deleteProduct(id);\n          this.products = this.products.filter((p) => p.id !== id);\n        } catch (error) {\n          this.showError('Failed to delete product');\n        }\n      }\n    },\n    showError(message) {\n      alert(message);\n    },\n    validateForm() {\n      // Implement form validation logic\n      return true;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\ntable td {\n  vertical-align: middle;\n}\n\n.table th {\n  text-align: center;\n}\n\n.table img {\n  object-fit: cover;\n  border-radius: 5px;\n}\n\n.btn-secondary {\n  width: 100%;\n  font-weight: bold;\n}\n\nbutton {\n  cursor: pointer;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}