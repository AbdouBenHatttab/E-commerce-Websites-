{"ast":null,"code":"import axios from 'axios';\n\n// Use environment variables or config for API URL to make it dynamic for different environments (e.g., development, production)\nconst API_URL = process.env.VUE_APP_API_URL || 'http://localhost:8080/contact/messages';\nclass ContactService {\n  // Get all messages\n  async getAllMessages() {\n    try {\n      const response = await axios.get(API_URL);\n      return response.data; // Return the messages\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n      throw new Error('Unable to fetch messages. Please try again later.');\n    }\n  }\n\n  // Get a single message by ID\n  async getMessageById(id) {\n    try {\n      const response = await axios.get(`${API_URL}/${id}`);\n      return response.data; // Return the message\n    } catch (error) {\n      console.error(`Error fetching message with ID ${id}:`, error);\n      throw new Error('Unable to fetch the message. Please try again later.');\n    }\n  }\n\n  // Create a new message\n  async createMessage(message) {\n    try {\n      const response = await axios.post(API_URL, message);\n      return response.data; // Return the created message\n    } catch (error) {\n      console.error('Error creating message:', error);\n      throw new Error('Unable to create the message. Please try again later.');\n    }\n  }\n\n  // Update an existing message\n  async updateMessage(id, updatedMessage) {\n    try {\n      const response = await axios.put(`${API_URL}/${id}`, updatedMessage);\n      return response.data; // Return the updated message\n    } catch (error) {\n      console.error(`Error updating message with ID ${id}:`, error);\n      throw new Error('Unable to update the message. Please try again later.');\n    }\n  }\n\n  // Delete a message\n  async deleteMessage(id) {\n    try {\n      await axios.delete(`${API_URL}/${id}`);\n      return {\n        success: true\n      }; // Indicate successful deletion\n    } catch (error) {\n      console.error(`Error deleting message with ID ${id}:`, error);\n      throw new Error('Unable to delete the message. Please try again later.');\n    }\n  }\n}\nexport default new ContactService();","map":{"version":3,"names":["axios","API_URL","process","env","VUE_APP_API_URL","ContactService","getAllMessages","response","get","data","error","console","Error","getMessageById","id","createMessage","message","post","updateMessage","updatedMessage","put","deleteMessage","delete","success"],"sources":["C:/Users/Hedib/OneDrive/Bureau/hello-word-vue/src/services/ContactService.js"],"sourcesContent":["import axios from 'axios';\n\n// Use environment variables or config for API URL to make it dynamic for different environments (e.g., development, production)\nconst API_URL =\n  process.env.VUE_APP_API_URL || 'http://localhost:8080/contact/messages';\n\nclass ContactService {\n  // Get all messages\n  async getAllMessages() {\n    try {\n      const response = await axios.get(API_URL);\n      return response.data; // Return the messages\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n      throw new Error('Unable to fetch messages. Please try again later.');\n    }\n  }\n\n  // Get a single message by ID\n  async getMessageById(id) {\n    try {\n      const response = await axios.get(`${API_URL}/${id}`);\n      return response.data; // Return the message\n    } catch (error) {\n      console.error(`Error fetching message with ID ${id}:`, error);\n      throw new Error('Unable to fetch the message. Please try again later.');\n    }\n  }\n\n  // Create a new message\n  async createMessage(message) {\n    try {\n      const response = await axios.post(API_URL, message);\n      return response.data; // Return the created message\n    } catch (error) {\n      console.error('Error creating message:', error);\n      throw new Error('Unable to create the message. Please try again later.');\n    }\n  }\n\n  // Update an existing message\n  async updateMessage(id, updatedMessage) {\n    try {\n      const response = await axios.put(`${API_URL}/${id}`, updatedMessage);\n      return response.data; // Return the updated message\n    } catch (error) {\n      console.error(`Error updating message with ID ${id}:`, error);\n      throw new Error('Unable to update the message. Please try again later.');\n    }\n  }\n\n  // Delete a message\n  async deleteMessage(id) {\n    try {\n      await axios.delete(`${API_URL}/${id}`);\n      return { success: true }; // Indicate successful deletion\n    } catch (error) {\n      console.error(`Error deleting message with ID ${id}:`, error);\n      throw new Error('Unable to delete the message. Please try again later.');\n    }\n  }\n}\n\nexport default new ContactService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GACXC,OAAO,CAACC,GAAG,CAACC,eAAe,IAAI,wCAAwC;AAEzE,MAAMC,cAAc,CAAC;EACnB;EACA,MAAMC,cAAcA,CAAA,EAAG;IACrB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACP,OAAO,CAAC;MACzC,OAAOM,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAM,IAAIE,KAAK,CAAC,mDAAmD,CAAC;IACtE;EACF;;EAEA;EACA,MAAMC,cAAcA,CAACC,EAAE,EAAE;IACvB,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,IAAIa,EAAE,EAAE,CAAC;MACpD,OAAOP,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkCI,EAAE,GAAG,EAAEJ,KAAK,CAAC;MAC7D,MAAM,IAAIE,KAAK,CAAC,sDAAsD,CAAC;IACzE;EACF;;EAEA;EACA,MAAMG,aAAaA,CAACC,OAAO,EAAE;IAC3B,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMP,KAAK,CAACiB,IAAI,CAAChB,OAAO,EAAEe,OAAO,CAAC;MACnD,OAAOT,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAM,IAAIE,KAAK,CAAC,uDAAuD,CAAC;IAC1E;EACF;;EAEA;EACA,MAAMM,aAAaA,CAACJ,EAAE,EAAEK,cAAc,EAAE;IACtC,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMP,KAAK,CAACoB,GAAG,CAAC,GAAGnB,OAAO,IAAIa,EAAE,EAAE,EAAEK,cAAc,CAAC;MACpE,OAAOZ,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkCI,EAAE,GAAG,EAAEJ,KAAK,CAAC;MAC7D,MAAM,IAAIE,KAAK,CAAC,uDAAuD,CAAC;IAC1E;EACF;;EAEA;EACA,MAAMS,aAAaA,CAACP,EAAE,EAAE;IACtB,IAAI;MACF,MAAMd,KAAK,CAACsB,MAAM,CAAC,GAAGrB,OAAO,IAAIa,EAAE,EAAE,CAAC;MACtC,OAAO;QAAES,OAAO,EAAE;MAAK,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkCI,EAAE,GAAG,EAAEJ,KAAK,CAAC;MAC7D,MAAM,IAAIE,KAAK,CAAC,uDAAuD,CAAC;IAC1E;EACF;AACF;AAEA,eAAe,IAAIP,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}