{"ast":null,"code":"import UserService from '@/services/UserService';\nexport default {\n  name: 'AdminProfile',\n  data() {\n    return {\n      user: null,\n      userForm: {\n        name: '',\n        email: ''\n      },\n      isModalVisible: false,\n      loading: false,\n      error: '',\n      success: ''\n    };\n  },\n  async mounted() {\n    this.fetchAdminProfile();\n  },\n  methods: {\n    async fetchAdminProfile() {\n      try {\n        this.user = UserService.getCurrentUser();\n        this.userForm = {\n          ...this.user\n        };\n      } catch (error) {\n        console.error('Error fetching admin profile:', error);\n      }\n    },\n    showModal() {\n      this.isModalVisible = true;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    async updateProfile() {\n      this.loading = true;\n      this.error = '';\n      this.success = '';\n      try {\n        const response = await UserService.updateProfile(this.userForm);\n        this.success = 'Profile updated successfully!';\n        console.log('Profile updated:', response.data);\n        this.user = {\n          ...this.userForm\n        };\n        this.closeModal();\n      } catch (error) {\n        console.error('Error updating profile:', error);\n        this.error = 'Failed to update profile.';\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["UserService","name","data","user","userForm","email","isModalVisible","loading","error","success","mounted","fetchAdminProfile","methods","getCurrentUser","console","showModal","closeModal","updateProfile","response","log"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\admin\\AdminProfile.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2 class=\"text-center mb-4\">Admin Profile</h2>\n\n    <!-- Loading State -->\n    <div v-if=\"!user\" class=\"d-flex justify-content-center\">\n      <div class=\"spinner-border\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n\n    <!-- Profile Section -->\n    <div v-else>\n      <div class=\"row justify-content-center\">\n        <!-- Profile Image and Info -->\n        <div class=\"col-lg-4 col-md-6 text-center\">\n          <div class=\"card shadow-sm\">\n            <img\n              v-if=\"user.imageUrl\"\n              :src=\"user.imageUrl\"\n              class=\"card-img-top rounded-circle mx-auto mt-3\"\n              alt=\"User Image\"\n              style=\"width: 150px; height: 150px; object-fit: cover\"\n            />\n            <img\n              v-else\n              src=\"https://via.placeholder.com/150\"\n              class=\"card-img-top rounded-circle mx-auto mt-3\"\n              alt=\"User Image\"\n              style=\"width: 150px; height: 150px; object-fit: cover\"\n            />\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{{ user.name }}</h5>\n              <p class=\"card-text\">{{ user.email }}</p>\n              <button class=\"btn btn-primary\" @click=\"showModal\">Edit Profile</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Edit Profile Modal -->\n      <div v-if=\"isModalVisible\" class=\"modal show d-block\" tabindex=\"-1\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Edit Profile</h5>\n              <button type=\"button\" class=\"btn-close\" @click=\"closeModal\"></button>\n            </div>\n            <div class=\"modal-body\">\n              <form @submit.prevent=\"updateProfile\">\n                <div class=\"mb-3\">\n                  <label for=\"name\" class=\"form-label\">Name</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"name\"\n                    v-model=\"userForm.name\"\n                    required\n                  />\n                </div>\n                <div class=\"mb-3\">\n                  <label for=\"email\" class=\"form-label\">Email</label>\n                  <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    id=\"email\"\n                    v-model=\"userForm.email\"\n                    required\n                  />\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\">Update Profile</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport UserService from '@/services/UserService';\n\nexport default {\n  name: 'AdminProfile',\n  data() {\n    return {\n      user: null,\n      userForm: {\n        name: '',\n        email: '',\n      },\n      isModalVisible: false,\n      loading: false,\n      error: '',\n      success: '',\n    };\n  },\n  async mounted() {\n    this.fetchAdminProfile();\n  },\n  methods: {\n    async fetchAdminProfile() {\n      try {\n        this.user = UserService.getCurrentUser();\n        this.userForm = { ...this.user };\n      } catch (error) {\n        console.error('Error fetching admin profile:', error);\n      }\n    },\n    showModal() {\n      this.isModalVisible = true;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    async updateProfile() {\n      this.loading = true;\n      this.error = '';\n      this.success = '';\n      try {\n        const response = await UserService.updateProfile(this.userForm);\n        this.success = 'Profile updated successfully!';\n        console.log('Profile updated:', response.data);\n        this.user = { ...this.userForm };\n        this.closeModal();\n      } catch (error) {\n        console.error('Error updating profile:', error);\n        this.error = 'Failed to update profile.';\n      } finally {\n        this.loading = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.btn-primary,\n.btn-secondary {\n  margin-top: 15px;\n}\n\n.spinner-border {\n  width: 3rem;\n  height: 3rem;\n}\n\n.card {\n  border-radius: 15px;\n  overflow: hidden;\n}\n\n.list-unstyled li {\n  margin-bottom: 10px;\n}\n</style>\n"],"mappings":"AAiFA,OAAOA,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE;QACRH,IAAI,EAAE,EAAE;QACRI,KAAK,EAAE;MACT,CAAC;MACDC,cAAc,EAAE,KAAK;MACrBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,IAAI,CAACR,IAAG,GAAIH,WAAW,CAACa,cAAc,CAAC,CAAC;QACxC,IAAI,CAACT,QAAO,GAAI;UAAE,GAAG,IAAI,CAACD;QAAK,CAAC;MAClC,EAAE,OAAOK,KAAK,EAAE;QACdM,OAAO,CAACN,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IACDO,SAASA,CAAA,EAAG;MACV,IAAI,CAACT,cAAa,GAAI,IAAI;IAC5B,CAAC;IACDU,UAAUA,CAAA,EAAG;MACX,IAAI,CAACV,cAAa,GAAI,KAAK;IAC7B,CAAC;IACD,MAAMW,aAAaA,CAAA,EAAG;MACpB,IAAI,CAACV,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,KAAI,GAAI,EAAE;MACf,IAAI,CAACC,OAAM,GAAI,EAAE;MACjB,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMlB,WAAW,CAACiB,aAAa,CAAC,IAAI,CAACb,QAAQ,CAAC;QAC/D,IAAI,CAACK,OAAM,GAAI,+BAA+B;QAC9CK,OAAO,CAACK,GAAG,CAAC,kBAAkB,EAAED,QAAQ,CAAChB,IAAI,CAAC;QAC9C,IAAI,CAACC,IAAG,GAAI;UAAE,GAAG,IAAI,CAACC;QAAS,CAAC;QAChC,IAAI,CAACY,UAAU,CAAC,CAAC;MACnB,EAAE,OAAOR,KAAK,EAAE;QACdM,OAAO,CAACN,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C,IAAI,CAACA,KAAI,GAAI,2BAA2B;MAC1C,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}