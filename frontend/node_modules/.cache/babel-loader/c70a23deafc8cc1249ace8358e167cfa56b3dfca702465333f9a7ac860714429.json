{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.VUE_APP_API_URL || 'http://localhost:8080/contact/messages';\nclass ContactService {\n  // Get all messages\n  async getAllMessages() {\n    try {\n      const response = await axios.get(API_URL);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n      throw error;\n    }\n  }\n\n  // Get a single message by ID\n  async getMessageById(id) {\n    try {\n      const response = await axios.get(`${API_URL}/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching message with ID ${id}:`, error);\n      throw error;\n    }\n  }\n\n  // Create a new message\n  async createMessage(message) {\n    try {\n      const response = await axios.post(API_URL, message);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating message:', error);\n      throw error;\n    }\n  }\n\n  // Update an existing message\n  async updateMessage(id, updatedMessage) {\n    try {\n      const response = await axios.put(`${API_URL}/${id}`, updatedMessage);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating message with ID ${id}:`, error);\n      throw error;\n    }\n  }\n\n  // Delete a message (include Authorization header)\n  async deleteMessage(id) {\n    try {\n      // Retrieve token from localStorage\n      const token = localStorage.getItem('token');\n      // Pass token in the Authorization header\n      await axios.delete(`${API_URL}/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error(`Error deleting message with ID ${id}:`, error);\n      throw error;\n    }\n  }\n}\nexport default new ContactService();","map":{"version":3,"names":["axios","API_URL","process","env","VUE_APP_API_URL","ContactService","getAllMessages","response","get","data","error","console","getMessageById","id","createMessage","message","post","updateMessage","updatedMessage","put","deleteMessage","token","localStorage","getItem","delete","headers","Authorization","success"],"sources":["C:/Users/Hedib/OneDrive/Bureau/hello-word-vue/src/services/ContactService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL =\n  process.env.VUE_APP_API_URL || 'http://localhost:8080/contact/messages';\n\nclass ContactService {\n  // Get all messages\n  async getAllMessages() {\n    try {\n      const response = await axios.get(API_URL);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n      throw error;\n    }\n  }\n\n  // Get a single message by ID\n  async getMessageById(id) {\n    try {\n      const response = await axios.get(`${API_URL}/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching message with ID ${id}:`, error);\n      throw error;\n    }\n  }\n\n  // Create a new message\n  async createMessage(message) {\n    try {\n      const response = await axios.post(API_URL, message);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating message:', error);\n      throw error;\n    }\n  }\n\n  // Update an existing message\n  async updateMessage(id, updatedMessage) {\n    try {\n      const response = await axios.put(`${API_URL}/${id}`, updatedMessage);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating message with ID ${id}:`, error);\n      throw error;\n    }\n  }\n\n  // Delete a message (include Authorization header)\n  async deleteMessage(id) {\n    try {\n      // Retrieve token from localStorage\n      const token = localStorage.getItem('token');\n      // Pass token in the Authorization header\n      await axios.delete(`${API_URL}/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      return { success: true };\n    } catch (error) {\n      console.error(`Error deleting message with ID ${id}:`, error);\n      throw error;\n    }\n  }\n}\n\nexport default new ContactService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GACXC,OAAO,CAACC,GAAG,CAACC,eAAe,IAAI,wCAAwC;AAEzE,MAAMC,cAAc,CAAC;EACnB;EACA,MAAMC,cAAcA,CAAA,EAAG;IACrB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACP,OAAO,CAAC;MACzC,OAAOM,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAME,cAAcA,CAACC,EAAE,EAAE;IACvB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,IAAIY,EAAE,EAAE,CAAC;MACpD,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkCG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC7D,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAMI,aAAaA,CAACC,OAAO,EAAE;IAC3B,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMP,KAAK,CAACgB,IAAI,CAACf,OAAO,EAAEc,OAAO,CAAC;MACnD,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAMO,aAAaA,CAACJ,EAAE,EAAEK,cAAc,EAAE;IACtC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMP,KAAK,CAACmB,GAAG,CAAC,GAAGlB,OAAO,IAAIY,EAAE,EAAE,EAAEK,cAAc,CAAC;MACpE,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkCG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC7D,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAMU,aAAaA,CAACP,EAAE,EAAE;IACtB,IAAI;MACF;MACA,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C;MACA,MAAMvB,KAAK,CAACwB,MAAM,CAAC,GAAGvB,OAAO,IAAIY,EAAE,EAAE,EAAE;QACrCY,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUL,KAAK;QAAG;MAC9C,CAAC,CAAC;MACF,OAAO;QAAEM,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkCG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC7D,MAAMA,KAAK;IACb;EACF;AACF;AAEA,eAAe,IAAIL,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}