{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AuthService from \"@/services/AuthService\";\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      error: \"\"\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await AuthService.login({\n          email: this.email,\n          password: this.password\n        });\n        this.$router.push(\"/products\"); // Redirect to product list page\n      } catch (error) {\n        this.error = \"Invalid email or password.\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["AuthService","data","email","password","error","methods","login","response","$router","push"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\views\\LoginPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Login</h1>\r\n        <form @submit.prevent=\"login\">\r\n            <div>\r\n                <label for=\"email\">Email:</label>\r\n                <input type=\"email\" v-model=\"email\" id=\"email\" required />\r\n            </div>\r\n            <div>\r\n                <label for=\"password\">Password:</label>\r\n                <input type=\"password\" v-model=\"password\" id=\"password\" required />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Login</button>\r\n            </div>\r\n            <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport AuthService from \"@/services/AuthService\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            email: \"\",\r\n            password: \"\",\r\n            error: \"\"\r\n        };\r\n    },\r\n    methods: {\r\n        async login() {\r\n            try {\r\n                const response = await AuthService.login({ email: this.email, password: this.password });\r\n                this.$router.push(\"/products\"); // Redirect to product list page\r\n            } catch (error) {\r\n                this.error = \"Invalid email or password.\";\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.error {\r\n    color: red;\r\n}\r\n</style>\r\n"],"mappings":";AAqBA,OAAOA,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACX,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,KAAKA,CAAA,EAAG;MACV,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMP,WAAW,CAACM,KAAK,CAAC;UAAEJ,KAAK,EAAE,IAAI,CAACA,KAAK;UAAEC,QAAQ,EAAE,IAAI,CAACA;QAAS,CAAC,CAAC;QACxF,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC,EAAE;MACpC,EAAE,OAAOL,KAAK,EAAE;QACZ,IAAI,CAACA,KAAI,GAAI,4BAA4B;MAC7C;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}