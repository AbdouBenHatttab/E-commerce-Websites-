{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport ProductService from '@/services/ProductService';\nexport default {\n  name: 'AdminProducts',\n  data() {\n    return {\n      products: [],\n      showForm: false,\n      newProduct: {\n        name: '',\n        description: '',\n        price: 0,\n        stock: 0,\n        imageUrl: ''\n      },\n      currentProduct: {\n        name: '',\n        description: '',\n        price: 0\n      },\n      editingProduct: null,\n      loading: false,\n      error: ''\n    };\n  },\n  async created() {\n    const response = await ProductService.getAllProducts();\n    this.products = response.data;\n  },\n  methods: {\n    toggleForm() {\n      this.showForm = !this.showForm;\n    },\n    async addProduct() {\n      const response = await ProductService.createProduct(this.newProduct);\n      this.products.push(response.data);\n      this.showForm = false;\n      this.newProduct = {\n        name: '',\n        description: '',\n        price: 0,\n        stock: 0,\n        imageUrl: ''\n      };\n    },\n    async deleteProduct(id) {\n      await ProductService.deleteProduct(id);\n      this.products = this.products.filter(p => p.id !== id);\n    },\n    goBack() {\n      this.$router.push({\n        name: 'AdminDashboard'\n      });\n    },\n    async saveProduct() {\n      if (!this.validateForm()) return;\n      this.loading = true;\n      try {\n        if (this.editingProduct) {\n          await ProductService.updateProduct(this.editingProduct.id, this.currentProduct);\n          const index = this.products.findIndex(p => p.id === this.editingProduct.id);\n          this.products.splice(index, 1, {\n            ...this.currentProduct,\n            id: this.editingProduct.id\n          });\n        } else {\n          const response = await ProductService.createProduct(this.currentProduct);\n          this.products.push(response.data);\n        }\n        this.closeModal();\n      } catch (error) {\n        this.showError('Failed to save product');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async confirmDelete(id) {\n      if (confirm('Are you sure you want to delete this product?')) {\n        try {\n          await ProductService.deleteProduct(id);\n          this.products = this.products.filter(p => p.id !== id);\n        } catch (error) {\n          this.showError('Failed to delete product');\n        }\n      }\n    },\n    showError(message) {\n      alert(message);\n    },\n    validateForm() {\n      // Implement form validation logic\n      return true;\n    },\n    closeModal() {\n      // Implement modal close logic\n    }\n  }\n};","map":{"version":3,"names":["ProductService","name","data","products","showForm","newProduct","description","price","stock","imageUrl","currentProduct","editingProduct","loading","error","created","response","getAllProducts","methods","toggleForm","addProduct","createProduct","push","deleteProduct","id","filter","p","goBack","$router","saveProduct","validateForm","updateProduct","index","findIndex","splice","closeModal","showError","confirmDelete","confirm","message","alert"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\admin\\AdminProducts.vue"],"sourcesContent":["<!-- src/components/admin/AdminProducts.vue -->\n<template>\n  <div class=\"container mt-5\">\n    <h2 class=\"mb-4 text-center\">Manage Products</h2>\n    <button class=\"btn btn-success mb-3\" @click=\"toggleForm\">\n      Add Product\n    </button>\n\n    <!-- Add Product Form -->\n    <div v-if=\"showForm\" class=\"mb-4\">\n      <div class=\"card p-4\">\n        <h5 class=\"card-title mb-3\">Add New Product</h5>\n        <input\n          v-model=\"newProduct.name\"\n          type=\"text\"\n          class=\"form-control mb-2\"\n          placeholder=\"Name\"\n          required\n        />\n        <input\n          v-model=\"newProduct.description\"\n          type=\"text\"\n          class=\"form-control mb-2\"\n          placeholder=\"Description\"\n          required\n        />\n        <input\n          v-model.number=\"newProduct.price\"\n          type=\"number\"\n          class=\"form-control mb-2\"\n          placeholder=\"Price\"\n          required\n        />\n        <input\n          v-model.number=\"newProduct.stock\"\n          type=\"number\"\n          class=\"form-control mb-2\"\n          placeholder=\"Stock\"\n          required\n        />\n        <input\n          v-model=\"newProduct.imageUrl\"\n          type=\"text\"\n          class=\"form-control mb-3\"\n          placeholder=\"Image URL\"\n        />\n        <button class=\"btn btn-primary w-100\" @click=\"addProduct\">\n          Save Product\n        </button>\n      </div>\n    </div>\n\n    <!-- Product Table -->\n    <div v-if=\"!showForm\">\n      <table class=\"table mt-3 table-striped table-bordered\">\n        <thead class=\"table-dark\">\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Price</th>\n            <th>Stock</th>\n            <th>Image</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"product in products\" :key=\"product.id\">\n            <td>{{ product.id }}</td>\n            <td>{{ product.name }}</td>\n            <td>{{ product.description }}</td>\n            <td>${{ product.price }}</td>\n            <td>{{ product.stock }}</td>\n            <td>\n              <img\n                :src=\"product.imageUrl\"\n                alt=\"Product Image\"\n                width=\"50\"\n                height=\"50\"\n                class=\"img-fluid rounded\"\n              />\n            </td>\n            <td>\n              <button\n                class=\"btn btn-danger btn-sm\"\n                @click=\"confirmDelete(product.id)\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <button class=\"btn btn-secondary mt-3\" @click=\"goBack\">Back</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ProductService from '@/services/ProductService';\n\nexport default {\n  name: 'AdminProducts',\n  data() {\n    return {\n      products: [],\n      showForm: false,\n      newProduct: {\n        name: '',\n        description: '',\n        price: 0,\n        stock: 0,\n        imageUrl: '',\n      },\n      currentProduct: {\n        name: '',\n        description: '',\n        price: 0,\n      },\n      editingProduct: null,\n      loading: false,\n      error: '',\n    };\n  },\n  async created() {\n    const response = await ProductService.getAllProducts();\n    this.products = response.data;\n  },\n  methods: {\n    toggleForm() {\n      this.showForm = !this.showForm;\n    },\n    async addProduct() {\n      const response = await ProductService.createProduct(this.newProduct);\n      this.products.push(response.data);\n      this.showForm = false;\n      this.newProduct = {\n        name: '',\n        description: '',\n        price: 0,\n        stock: 0,\n        imageUrl: '',\n      };\n    },\n    async deleteProduct(id) {\n      await ProductService.deleteProduct(id);\n      this.products = this.products.filter((p) => p.id !== id);\n    },\n    goBack() {\n      this.$router.push({ name: 'AdminDashboard' });\n    },\n    async saveProduct() {\n      if (!this.validateForm()) return;\n\n      this.loading = true;\n      try {\n        if (this.editingProduct) {\n          await ProductService.updateProduct(\n            this.editingProduct.id,\n            this.currentProduct\n          );\n          const index = this.products.findIndex(\n            (p) => p.id === this.editingProduct.id\n          );\n          this.products.splice(index, 1, {\n            ...this.currentProduct,\n            id: this.editingProduct.id,\n          });\n        } else {\n          const response = await ProductService.createProduct(\n            this.currentProduct\n          );\n          this.products.push(response.data);\n        }\n        this.closeModal();\n      } catch (error) {\n        this.showError('Failed to save product');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async confirmDelete(id) {\n      if (confirm('Are you sure you want to delete this product?')) {\n        try {\n          await ProductService.deleteProduct(id);\n          this.products = this.products.filter((p) => p.id !== id);\n        } catch (error) {\n          this.showError('Failed to delete product');\n        }\n      }\n    },\n    showError(message) {\n      alert(message);\n    },\n    validateForm() {\n      // Implement form validation logic\n      return true;\n    },\n    closeModal() {\n      // Implement modal close logic\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Custom styling */\n.card {\n  border-radius: 10px;\n}\n\n.table-striped tbody tr:nth-of-type(odd) {\n  background-color: #f9f9f9;\n}\n\n.img-fluid {\n  max-width: 100%;\n  height: auto;\n}\n\ntable th,\ntable td {\n  vertical-align: middle;\n}\n\n.table th {\n  text-align: center;\n}\n\n.table img {\n  object-fit: cover;\n  border-radius: 5px;\n}\n\n.btn-secondary {\n  width: 100%;\n  font-weight: bold;\n}\n\nbutton {\n  cursor: pointer;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}