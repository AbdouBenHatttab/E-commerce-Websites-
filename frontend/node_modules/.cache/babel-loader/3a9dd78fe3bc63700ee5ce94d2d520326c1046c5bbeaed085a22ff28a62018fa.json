{"ast":null,"code":"import CartService from \"@/services/CartService\";\nexport default {\n  data() {\n    return {\n      cartItems: []\n    };\n  },\n  created() {\n    this.fetchCart();\n  },\n  methods: {\n    fetchCart() {\n      const userId = this.$store.state.user.id; // Assuming you have a Vuex store with user info\n      CartService.getCart(userId).then(response => {\n        this.cartItems = response.data;\n      });\n    },\n    removeFromCart(productId) {\n      const userId = this.$store.state.user.id;\n      CartService.removeFromCart(userId, productId).then(() => {\n        this.fetchCart();\n      });\n    },\n    updateQuantity(productId, quantity) {\n      const userId = this.$store.state.user.id;\n      CartService.updateQuantity(userId, productId, quantity).then(() => {\n        this.fetchCart();\n      });\n    }\n  }\n};","map":{"version":3,"names":["CartService","data","cartItems","created","fetchCart","methods","userId","$store","state","user","id","getCart","then","response","removeFromCart","productId","updateQuantity","quantity"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\user\\ShoppingCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"shopping-cart\">\r\n    <h2>Your Shopping Cart</h2>\r\n    <div v-if=\"cartItems.length === 0\">\r\n      <p>Your cart is empty.</p>\r\n    </div>\r\n    <div v-else>\r\n      <div v-for=\"item in cartItems\" :key=\"item.productId\" class=\"cart-item\">\r\n        <h3>{{ item.productName }}</h3>\r\n        <p>Quantity: {{ item.quantity }}</p>\r\n        <p>Price: ${{ item.price }}</p>\r\n        <button @click=\"removeFromCart(item.productId)\">Remove</button>\r\n        <button @click=\"updateQuantity(item.productId, item.quantity + 1)\">\r\n          +\r\n        </button>\r\n        <button\r\n          @click=\"updateQuantity(item.productId, item.quantity - 1)\"\r\n          :disabled=\"item.quantity <= 1\"\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CartService from \"@/services/CartService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cartItems: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchCart();\r\n  },\r\n  methods: {\r\n    fetchCart() {\r\n      const userId = this.$store.state.user.id; // Assuming you have a Vuex store with user info\r\n      CartService.getCart(userId).then((response) => {\r\n        this.cartItems = response.data;\r\n      });\r\n    },\r\n    removeFromCart(productId) {\r\n      const userId = this.$store.state.user.id;\r\n      CartService.removeFromCart(userId, productId).then(() => {\r\n        this.fetchCart();\r\n      });\r\n    },\r\n    updateQuantity(productId, quantity) {\r\n      const userId = this.$store.state.user.id;\r\n      CartService.updateQuantity(userId, productId, quantity).then(() => {\r\n        this.fetchCart();\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.shopping-cart {\r\n  padding: 16px;\r\n}\r\n\r\n.cart-item {\r\n  border: 1px solid #ccc;\r\n  padding: 16px;\r\n  margin: 16px 0;\r\n}\r\n</style>\r\n"],"mappings":"AA2BA,OAAOA,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACPD,SAASA,CAAA,EAAG;MACV,MAAME,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,EAAE,EAAE;MAC1CV,WAAW,CAACW,OAAO,CAACL,MAAM,CAAC,CAACM,IAAI,CAAEC,QAAQ,IAAK;QAC7C,IAAI,CAACX,SAAQ,GAAIW,QAAQ,CAACZ,IAAI;MAChC,CAAC,CAAC;IACJ,CAAC;IACDa,cAAcA,CAACC,SAAS,EAAE;MACxB,MAAMT,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,EAAE;MACxCV,WAAW,CAACc,cAAc,CAACR,MAAM,EAAES,SAAS,CAAC,CAACH,IAAI,CAAC,MAAM;QACvD,IAAI,CAACR,SAAS,CAAC,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC;IACDY,cAAcA,CAACD,SAAS,EAAEE,QAAQ,EAAE;MAClC,MAAMX,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,EAAE;MACxCV,WAAW,CAACgB,cAAc,CAACV,MAAM,EAAES,SAAS,EAAEE,QAAQ,CAAC,CAACL,IAAI,CAAC,MAAM;QACjE,IAAI,CAACR,SAAS,CAAC,CAAC;MAClB,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}