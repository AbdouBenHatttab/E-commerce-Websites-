{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"contact-messages-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"alert alert-info\"\n};\nconst _hoisted_3 = {\n  class: \"card-body\"\n};\nconst _hoisted_4 = {\n  class: \"card-title\"\n};\nconst _hoisted_5 = {\n  class: \"card-subtitle mb-2 text-muted\"\n};\nconst _hoisted_6 = {\n  class: \"card-text\"\n};\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", {\n    class: \"text-center mb-4\"\n  }, \"Contact Us Messages\", -1 /* HOISTED */)), $data.messages.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" No messages available. \")) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Messages List \"), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: \"card mb-3\"\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h5\", _hoisted_4, _toDisplayString(message.name), 1 /* TEXT */), _createElementVNode(\"h6\", _hoisted_5, _toDisplayString(message.email), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(message.message), 1 /* TEXT */), _createCommentVNode(\" Delete Button for Admin \"), $options.isAdmin ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.deleteMessage(message.id),\n      class: \"btn btn-danger btn-sm\"\n    }, \" Delete \", 8 /* PROPS */, _hoisted_7)) : _createCommentVNode(\"v-if\", true)])]);\n  }), 128 /* KEYED_FRAGMENT */))])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","messages","length","_hoisted_2","_Fragment","_createCommentVNode","_renderList","message","id","_hoisted_3","_hoisted_4","_toDisplayString","name","_hoisted_5","email","_hoisted_6","$options","isAdmin","onClick","$event","deleteMessage","_hoisted_7"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\admin\\ContactMessages.vue"],"sourcesContent":["<template>\n  <div class=\"contact-messages-container\">\n    <h2 class=\"text-center mb-4\">Contact Us Messages</h2>\n    <div v-if=\"messages.length === 0\" class=\"alert alert-info\">\n      No messages available.\n    </div>\n\n    <!-- Messages List -->\n    <div v-else>\n      <div v-for=\"message in messages\" :key=\"message.id\" class=\"card mb-3\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{ message.name }}</h5>\n          <h6 class=\"card-subtitle mb-2 text-muted\">{{ message.email }}</h6>\n          <p class=\"card-text\">{{ message.message }}</p>\n\n          <!-- Delete Button for Admin -->\n          <button\n            v-if=\"isAdmin\"\n            @click=\"deleteMessage(message.id)\"\n            class=\"btn btn-danger btn-sm\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ContactService from '@/services/ContactService';\n\nexport default {\n  name: 'ContactMessages',\n  data() {\n    return {\n      messages: [],\n    };\n  },\n  computed: {\n    isAdmin() {\n      return this.$store.state.user?.role === 'ROLE_ADMIN'; // Check if the user is an admin\n    },\n  },\n  async created() {\n    try {\n      this.messages = await ContactService.getAllMessages();\n    } catch (error) {\n      console.error('Error fetching contact messages:', error);\n    }\n  },\n  methods: {\n    async deleteMessage(id) {\n      try {\n        await ContactService.deleteMessage(id);\n        this.messages = this.messages.filter((message) => message.id !== id);\n      } catch (error) {\n        console.error('Error deleting message:', error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Add styles for the CRUD operations */\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAA4B;;EADzCC,GAAA;EAGsCD,KAAK,EAAC;;;EAO/BA,KAAK,EAAC;AAAW;;EAChBA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAA+B;;EACtCA,KAAK,EAAC;AAAW;mBAb9B;;uBACEE,mBAAA,CAyBM,OAzBNC,UAyBM,G,0BAxBJC,mBAAA,CAAqD;IAAjDJ,KAAK,EAAC;EAAkB,GAAC,qBAAmB,sBACrCK,KAAA,CAAAC,QAAQ,CAACC,MAAM,U,cAA1BL,mBAAA,CAEM,OAFNM,UAEM,EAFqD,0BAE3D,M,cAGAN,mBAAA,CAiBMO,SAAA;IAzBVR,GAAA;EAAA,IAOIS,mBAAA,mBAAsB,EACtBN,mBAAA,CAiBM,e,kBAhBJF,mBAAA,CAeMO,SAAA,QAxBZE,WAAA,CAS6BN,KAAA,CAAAC,QAAQ,EAAnBM,OAAO;yBAAnBV,mBAAA,CAeM;MAf4BD,GAAG,EAAEW,OAAO,CAACC,EAAE;MAAEb,KAAK,EAAC;QACvDI,mBAAA,CAaM,OAbNU,UAaM,GAZJV,mBAAA,CAA8C,MAA9CW,UAA8C,EAAAC,gBAAA,CAApBJ,OAAO,CAACK,IAAI,kBACtCb,mBAAA,CAAkE,MAAlEc,UAAkE,EAAAF,gBAAA,CAArBJ,OAAO,CAACO,KAAK,kBAC1Df,mBAAA,CAA8C,KAA9CgB,UAA8C,EAAAJ,gBAAA,CAAtBJ,OAAO,CAACA,OAAO,kBAEvCF,mBAAA,6BAAgC,EAExBW,QAAA,CAAAC,OAAO,I,cADfpB,mBAAA,CAMS;MAtBnBD,GAAA;MAkBasB,OAAK,EAAAC,MAAA,IAAEH,QAAA,CAAAI,aAAa,CAACb,OAAO,CAACC,EAAE;MAChCb,KAAK,EAAC;OACP,UAED,iBAtBV0B,UAAA,KAAAhB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}