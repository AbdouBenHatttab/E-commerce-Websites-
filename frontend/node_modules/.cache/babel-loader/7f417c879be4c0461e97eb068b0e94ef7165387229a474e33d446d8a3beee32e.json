{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ContactUs',\n  data() {\n    return {\n      form: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      statusMessage: '',\n      statusClass: ''\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Make API call to backend to store the message\n        const response = await axios.post('http://localhost:8080/contact', this.form);\n\n        // Handle successful submission\n        if (response.status === 200) {\n          this.statusMessage = 'Your message has been sent successfully!';\n          this.statusClass = 'text-success';\n        } else {\n          this.statusMessage = 'There was an issue with your submission. Please try again.';\n          this.statusClass = 'text-danger';\n        }\n\n        // Optionally, reset the form after submission\n        this.form.name = '';\n        this.form.email = '';\n        this.form.message = '';\n      } catch (error) {\n        console.error('Error submitting contact form:', error);\n        this.statusMessage = 'An error occurred. Please try again later.';\n        this.statusClass = 'text-danger';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","form","email","message","statusMessage","statusClass","methods","submitForm","response","post","status","error","console"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\ContactUs.vue"],"sourcesContent":["<template>\n  <div class=\"container py-5\">\n    <h2 class=\"text-center mb-4\">Contact Us</h2>\n    <form @submit.prevent=\"submitForm\" novalidate>\n      <div class=\"mb-3\">\n        <label for=\"name\" class=\"form-label\">Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          class=\"form-control\"\n          v-model=\"form.name\"\n          required\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"email\" class=\"form-label\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          class=\"form-control\"\n          v-model=\"form.email\"\n          required\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"message\" class=\"form-label\">Message</label>\n        <textarea\n          id=\"message\"\n          class=\"form-control\"\n          v-model=\"form.message\"\n          rows=\"4\"\n          required\n        ></textarea>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary w-100\">\n        Send Message\n      </button>\n    </form>\n\n    <!-- Success Message -->\n    <div v-if=\"successMessage\" class=\"alert alert-success mt-4\">\n      {{ successMessage }}\n    </div>\n\n    <!-- Error Message -->\n    <div v-if=\"errorMessage\" class=\"alert alert-danger mt-4\">\n      {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ContactUs',\n  data() {\n    return {\n      form: {\n        name: '',\n        email: '',\n        message: '',\n      },\n      statusMessage: '',\n      statusClass: '',\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Make API call to backend to store the message\n        const response = await axios.post(\n          'http://localhost:8080/contact',\n          this.form\n        );\n\n        // Handle successful submission\n        if (response.status === 200) {\n          this.statusMessage = 'Your message has been sent successfully!';\n          this.statusClass = 'text-success';\n        } else {\n          this.statusMessage =\n            'There was an issue with your submission. Please try again.';\n          this.statusClass = 'text-danger';\n        }\n\n        // Optionally, reset the form after submission\n        this.form.name = '';\n        this.form.email = '';\n        this.form.message = '';\n      } catch (error) {\n        console.error('Error submitting contact form:', error);\n        this.statusMessage = 'An error occurred. Please try again later.';\n        this.statusClass = 'text-danger';\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.contact-us-container {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n}\n</style>\n"],"mappings":"AAoDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJF,IAAI,EAAE,EAAE;QACRG,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACX,CAAC;MACDC,aAAa,EAAE,EAAE;MACjBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAC/B,+BAA+B,EAC/B,IAAI,CAACR,IACP,CAAC;;QAED;QACA,IAAIO,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACN,aAAY,GAAI,0CAA0C;UAC/D,IAAI,CAACC,WAAU,GAAI,cAAc;QACnC,OAAO;UACL,IAAI,CAACD,aAAY,GACf,4DAA4D;UAC9D,IAAI,CAACC,WAAU,GAAI,aAAa;QAClC;;QAEA;QACA,IAAI,CAACJ,IAAI,CAACF,IAAG,GAAI,EAAE;QACnB,IAAI,CAACE,IAAI,CAACC,KAAI,GAAI,EAAE;QACpB,IAAI,CAACD,IAAI,CAACE,OAAM,GAAI,EAAE;MACxB,EAAE,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtD,IAAI,CAACP,aAAY,GAAI,4CAA4C;QACjE,IAAI,CAACC,WAAU,GAAI,aAAa;MAClC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}