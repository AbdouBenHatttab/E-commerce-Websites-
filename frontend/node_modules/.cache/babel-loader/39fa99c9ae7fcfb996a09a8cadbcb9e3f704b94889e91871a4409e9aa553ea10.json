{"ast":null,"code":"import ProductService from \"@/services/roductService\";\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      categories: []\n    };\n  },\n  methods: {\n    async fetchCategories() {\n      try {\n        // Call the backend to get all distinct categories\n        const response = await ProductService.getAllCategories();\n        // Assume response.data is an array of category strings, e.g., [\"Laptop\", \"Mobile\", \"Mens Fashion\", \"Women Fashion\"]\n        this.categories = response.data;\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    },\n    getCategoryImage(category) {\n      // Mapping from category names to image file paths.\n      // Update these values as necessary or retrieve images dynamically.\n      const mapping = {\n        \"Laptop\": \"laptop.jpg\",\n        \"Mobile\": \"mobile.jpg\",\n        \"Mens Fashion\": \"mens-fashion.jpg\",\n        \"Women Fashion\": \"women.jpg\"\n      };\n      // Return the mapped image, or a default image if not found.\n      return mapping[category] || \"default.jpg\";\n    }\n  },\n  created() {\n    this.fetchCategories();\n  }\n};","map":{"version":3,"names":["ProductService","name","data","categories","methods","fetchCategories","response","getAllCategories","error","console","getCategoryImage","category","mapping","created"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\n  <div class=\"py-3 py-md-5 bg-light\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <h4 class=\"mb-4\">Our Categories</h4>\n        </div>\n        <!-- Loop through the categories -->\n        <div class=\"col-6 col-md-3\" v-for=\"category in categories\" :key=\"category\">\n          <div class=\"category-card\">\n            <!-- Using router-link to navigate; you can adjust the target route as needed -->\n            <router-link :to=\"{ name: 'ProductList', query: { category: category } }\">\n              <div class=\"category-card-img\">\n                <img :src=\"getCategoryImage(category)\" class=\"w-100\" :alt=\"category\" />\n              </div>\n              <div class=\"category-card-body\">\n                <h5>{{ category }}</h5>\n              </div>\n            </router-link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ProductService from \"@/services/roductService\";\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      categories: []\n    };\n  },\n  methods: {\n    async fetchCategories() {\n      try {\n        // Call the backend to get all distinct categories\n        const response = await ProductService.getAllCategories();\n        // Assume response.data is an array of category strings, e.g., [\"Laptop\", \"Mobile\", \"Mens Fashion\", \"Women Fashion\"]\n        this.categories = response.data;\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    },\n    getCategoryImage(category) {\n      // Mapping from category names to image file paths.\n      // Update these values as necessary or retrieve images dynamically.\n      const mapping = {\n        \"Laptop\": \"laptop.jpg\",\n        \"Mobile\": \"mobile.jpg\",\n        \"Mens Fashion\": \"mens-fashion.jpg\",\n        \"Women Fashion\": \"women.jpg\"\n      };\n      // Return the mapped image, or a default image if not found.\n      return mapping[category] || \"default.jpg\";\n    }\n  },\n  created() {\n    this.fetchCategories();\n  }\n};\n</script>\n\n<style scoped>\n/* Category Start */\n.category-card {\n  border: 1px solid #ddd;\n  box-shadow: 0 0.125rem 0.25rem rgb(0 0 0 / 8%);\n  margin-bottom: 24px;\n  background-color: #fff;\n}\n.category-card a {\n  text-decoration: none;\n}\n.category-card .category-card-img {\n  max-height: 260px;\n  overflow: hidden;\n  border-bottom: 1px solid #ccc;\n}\n.category-card .category-card-body {\n  padding: 10px 16px;\n}\n.category-card .category-card-body h5 {\n  margin-bottom: 0px;\n  font-size: 18px;\n  font-weight: 600;\n  color: #000;\n  text-align: center;\n}\n/* Category End */\n</style>\n"],"mappings":"AA2BA,OAAOA,cAAa,MAAO,0BAA0B;AAErD,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMN,cAAc,CAACO,gBAAgB,CAAC,CAAC;QACxD;QACA,IAAI,CAACJ,UAAS,GAAIG,QAAQ,CAACJ,IAAI;MACjC,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDE,gBAAgBA,CAACC,QAAQ,EAAE;MACzB;MACA;MACA,MAAMC,OAAM,GAAI;QACd,QAAQ,EAAE,YAAY;QACtB,QAAQ,EAAE,YAAY;QACtB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE;MACnB,CAAC;MACD;MACA,OAAOA,OAAO,CAACD,QAAQ,KAAK,aAAa;IAC3C;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACR,eAAe,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}