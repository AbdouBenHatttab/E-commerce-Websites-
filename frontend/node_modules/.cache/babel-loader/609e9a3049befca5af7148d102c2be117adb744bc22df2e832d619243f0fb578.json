{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport ProductService from '@/services/ProductService';\nexport default {\n  name: 'AdminProducts',\n  data() {\n    return {\n      products: [],\n      showForm: false,\n      isEditing: false,\n      newProduct: {\n        id: null,\n        name: '',\n        description: '',\n        price: 0,\n        category: '',\n        stock: 0,\n        imageUrl: ''\n      }\n    };\n  },\n  async created() {\n    await this.fetchProducts();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await ProductService.getAllProducts();\n        this.products = response.data;\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    toggleForm() {\n      this.showForm = !this.showForm;\n      // Reset form if switching to \"add\" mode\n      if (!this.isEditing) {\n        this.resetForm();\n      }\n    },\n    async addProduct() {\n      try {\n        const response = await ProductService.createProduct(this.newProduct);\n        this.products.push(response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Error adding product:', error);\n      }\n    },\n    editProduct(product) {\n      this.newProduct = {\n        ...product\n      };\n      this.isEditing = true;\n      this.showForm = true;\n    },\n    async updateProduct() {\n      try {\n        await ProductService.updateProduct(this.newProduct.id, this.newProduct);\n        // Refresh product list\n        await this.fetchProducts();\n        this.resetForm();\n      } catch (error) {\n        console.error('Error updating product:', error);\n      }\n    },\n    async deleteProduct(id) {\n      try {\n        await ProductService.deleteProduct(id);\n        this.products = this.products.filter(product => product.id !== id);\n      } catch (error) {\n        console.error('Error deleting product:', error);\n      }\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    resetForm() {\n      this.newProduct = {\n        id: null,\n        name: '',\n        description: '',\n        price: 0,\n        category: '',\n        stock: 0,\n        imageUrl: ''\n      };\n      this.isEditing = false;\n      this.showForm = false;\n    },\n    goBack() {\n      this.$router.push({\n        name: 'AdminDashboard'\n      });\n    }\n  }\n};","map":{"version":3,"names":["ProductService","name","data","products","showForm","isEditing","newProduct","id","description","price","category","stock","imageUrl","created","fetchProducts","methods","response","getAllProducts","error","console","toggleForm","resetForm","addProduct","createProduct","push","editProduct","product","updateProduct","deleteProduct","filter","cancelEdit","goBack","$router"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\admin\\AdminProducts.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Manage Products</h2>\n    <button class=\"btn btn-success mb-3\" @click=\"toggleForm\">\n      {{ isEditing ? 'Edit Product' : 'Add Product' }}\n    </button>\n\n    <!-- Product Form -->\n    <div v-if=\"showForm\" class=\"mb-3\">\n      <div class=\"form-group mb-2\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          v-model=\"newProduct.name\"\n          placeholder=\"Product Name\"\n          required\n        />\n      </div>\n      <div class=\"form-group mb-2\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          v-model=\"newProduct.description\"\n          placeholder=\"Description\"\n          required\n        />\n      </div>\n      <div class=\"form-group mb-2\">\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          v-model.number=\"newProduct.price\"\n          placeholder=\"Price\"\n          required\n        />\n      </div>\n      <div class=\"form-group mb-2\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          v-model=\"newProduct.category\"\n          placeholder=\"Category\"\n          required\n        />\n      </div>\n      <div class=\"form-group mb-2\">\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          v-model.number=\"newProduct.stock\"\n          placeholder=\"Stock\"\n          required\n        />\n      </div>\n      <div class=\"form-group mb-2\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          v-model=\"newProduct.imageUrl\"\n          placeholder=\"Image URL (Optional)\"\n        />\n      </div>\n      <button\n        class=\"btn btn-primary\"\n        @click=\"isEditing ? updateProduct() : addProduct()\"\n      >\n        {{ isEditing ? 'Update Product' : 'Save Product' }}\n      </button>\n      <button class=\"btn btn-secondary ms-2\" @click=\"cancelEdit\">Cancel</button>\n    </div>\n\n    <!-- Products Table -->\n    <table class=\"table mt-3\" v-if=\"products.length\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Price</th>\n          <th>Category</th>\n          <th>Stock</th>\n          <th>Image URL</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"product in products\" :key=\"product.id\">\n          <td>{{ product.id }}</td>\n          <td>{{ product.name }}</td>\n          <td>{{ product.description }}</td>\n          <td>${{ product.price }}</td>\n          <td>{{ product.category }}</td>\n          <td>{{ product.stock }}</td>\n          <td>im{{ product.imageUrl }}</td>\n          <td>\n            <button\n              class=\"btn btn-warning btn-sm\"\n              @click=\"editProduct(product)\"\n            >\n              Edit\n            </button>\n            <button\n              class=\"btn btn-danger btn-sm ms-2\"\n              @click=\"deleteProduct(product.id)\"\n            >\n              Delete\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <div v-else>\n      <p>No products available.</p>\n    </div>\n    <button class=\"btn btn-secondary mt-3\" @click=\"goBack\">Back</button>\n  </div>\n</template>\n\n<script>\nimport ProductService from '@/services/ProductService';\n\nexport default {\n  name: 'AdminProducts',\n  data() {\n    return {\n      products: [],\n      showForm: false,\n      isEditing: false,\n      newProduct: {\n        id: null,\n        name: '',\n        description: '',\n        price: 0,\n        category: '',\n        stock: 0,\n        imageUrl: '',\n      },\n    };\n  },\n  async created() {\n    await this.fetchProducts();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await ProductService.getAllProducts();\n        this.products = response.data;\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    toggleForm() {\n      this.showForm = !this.showForm;\n      // Reset form if switching to \"add\" mode\n      if (!this.isEditing) {\n        this.resetForm();\n      }\n    },\n    async addProduct() {\n      try {\n        const response = await ProductService.createProduct(this.newProduct);\n        this.products.push(response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Error adding product:', error);\n      }\n    },\n    editProduct(product) {\n      this.newProduct = { ...product };\n      this.isEditing = true;\n      this.showForm = true;\n    },\n    async updateProduct() {\n      try {\n        await ProductService.updateProduct(this.newProduct.id, this.newProduct);\n        // Refresh product list\n        await this.fetchProducts();\n        this.resetForm();\n      } catch (error) {\n        console.error('Error updating product:', error);\n      }\n    },\n    async deleteProduct(id) {\n      try {\n        await ProductService.deleteProduct(id);\n        this.products = this.products.filter((product) => product.id !== id);\n      } catch (error) {\n        console.error('Error deleting product:', error);\n      }\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    resetForm() {\n      this.newProduct = {\n        id: null,\n        name: '',\n        description: '',\n        price: 0,\n        category: '',\n        stock: 0,\n        imageUrl: '',\n      };\n      this.isEditing = false;\n      this.showForm = false;\n    },\n    goBack() {\n      this.$router.push({ name: 'AdminDashboard' });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.table {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}