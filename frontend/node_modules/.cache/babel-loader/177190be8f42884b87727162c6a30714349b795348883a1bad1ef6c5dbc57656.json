{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport UserService from \"@/services/UserService\";\nexport default {\n  name: \"AdminUsers\",\n  data() {\n    return {\n      users: [],\n      userForm: {\n        id: null,\n        name: \"\",\n        email: \"\"\n      },\n      isEditing: false\n    };\n  },\n  async created() {\n    try {\n      const response = await UserService.getAllUsers();\n      this.users = response.data;\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  },\n  methods: {\n    async createUser() {\n      try {\n        const response = await UserService.createUser(this.userForm);\n        this.users.push(response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error(\"Error creating user:\", error);\n      }\n    },\n    async updateUser() {\n      try {\n        const response = await UserService.updateUser(this.userForm.id, this.userForm);\n        const index = this.users.findIndex(user => user.id === this.userForm.id);\n        this.$set(this.users, index, response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error(\"Error updating user:\", error);\n      }\n    },\n    async deleteUser(id) {\n      try {\n        await UserService.deleteUser(id);\n        this.users = this.users.filter(user => user.id !== id);\n      } catch (error) {\n        console.error(\"Error deleting user:\", error);\n      }\n    },\n    editUser(user) {\n      this.userForm = {\n        ...user\n      };\n      this.isEditing = true;\n    },\n    resetForm() {\n      this.userForm = {\n        id: null,\n        name: \"\",\n        email: \"\"\n      };\n      this.isEditing = false;\n    },\n    goBack() {\n      this.$router.push({\n        name: \"AdminDashboard\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["UserService","name","data","users","userForm","id","email","isEditing","created","response","getAllUsers","error","console","methods","createUser","push","resetForm","updateUser","index","findIndex","user","$set","deleteUser","filter","editUser","goBack","$router"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\admin\\AdminUsers.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2 class=\"text-center mb-4\">Manage Users</h2>\n    <div v-if=\"users.length === 0\" class=\"alert alert-info\">\n      <p>No users found.</p>\n    </div>\n    <div v-else>\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"user in users\" :key=\"user.id\">\n            <td>{{ user.name }}</td>\n            <td>{{ user.email }}</td>\n            <td>\n              <button @click=\"editUser(user)\" class=\"btn btn-primary btn-sm\">\n                Edit\n              </button>\n              <button\n                @click=\"deleteUser(user.id)\"\n                class=\"btn btn-danger btn-sm\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <button @click=\"goBack\" class=\"btn btn-secondary mt-3\">\n      Back to Dashboard\n    </button>\n\n    <h3 class=\"mt-5\">{{ isEditing ? \"Edit User\" : \"Add User\" }}</h3>\n    <form @submit.prevent=\"isEditing ? updateUser() : createUser()\">\n      <div class=\"mb-3\">\n        <label>Name:</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          v-model=\"userForm.name\"\n          required\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label>Email:</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          v-model=\"userForm.email\"\n          required\n        />\n      </div>\n      <button type=\"submit\" class=\"btn btn-success\">\n        {{ isEditing ? \"Update\" : \"Add\" }} User\n      </button>\n      <button type=\"button\" @click=\"resetForm\" class=\"btn btn-secondary ml-2\">\n        Cancel\n      </button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport UserService from \"@/services/UserService\";\n\nexport default {\n  name: \"AdminUsers\",\n  data() {\n    return {\n      users: [],\n      userForm: {\n        id: null,\n        name: \"\",\n        email: \"\",\n      },\n      isEditing: false,\n    };\n  },\n  async created() {\n    try {\n      const response = await UserService.getAllUsers();\n      this.users = response.data;\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  },\n  methods: {\n    async createUser() {\n      try {\n        const response = await UserService.createUser(this.userForm);\n        this.users.push(response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error(\"Error creating user:\", error);\n      }\n    },\n    async updateUser() {\n      try {\n        const response = await UserService.updateUser(\n          this.userForm.id,\n          this.userForm\n        );\n        const index = this.users.findIndex(\n          (user) => user.id === this.userForm.id\n        );\n        this.$set(this.users, index, response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error(\"Error updating user:\", error);\n      }\n    },\n    async deleteUser(id) {\n      try {\n        await UserService.deleteUser(id);\n        this.users = this.users.filter((user) => user.id !== id);\n      } catch (error) {\n        console.error(\"Error deleting user:\", error);\n      }\n    },\n    editUser(user) {\n      this.userForm = { ...user };\n      this.isEditing = true;\n    },\n    resetForm() {\n      this.userForm = {\n        id: null,\n        name: \"\",\n        email: \"\",\n      };\n      this.isEditing = false;\n    },\n    goBack() {\n      this.$router.push({ name: \"AdminDashboard\" });\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":";;;AAqEA,OAAOA,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;QACRC,EAAE,EAAE,IAAI;QACRJ,IAAI,EAAE,EAAE;QACRK,KAAK,EAAE;MACT,CAAC;MACDC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMT,WAAW,CAACU,WAAW,CAAC,CAAC;MAChD,IAAI,CAACP,KAAI,GAAIM,QAAQ,CAACP,IAAI;IAC5B,EAAE,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAML,QAAO,GAAI,MAAMT,WAAW,CAACc,UAAU,CAAC,IAAI,CAACV,QAAQ,CAAC;QAC5D,IAAI,CAACD,KAAK,CAACY,IAAI,CAACN,QAAQ,CAACP,IAAI,CAAC;QAC9B,IAAI,CAACc,SAAS,CAAC,CAAC;MAClB,EAAE,OAAOL,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACD,MAAMM,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMR,QAAO,GAAI,MAAMT,WAAW,CAACiB,UAAU,CAC3C,IAAI,CAACb,QAAQ,CAACC,EAAE,EAChB,IAAI,CAACD,QACP,CAAC;QACD,MAAMc,KAAI,GAAI,IAAI,CAACf,KAAK,CAACgB,SAAS,CAC/BC,IAAI,IAAKA,IAAI,CAACf,EAAC,KAAM,IAAI,CAACD,QAAQ,CAACC,EACtC,CAAC;QACD,IAAI,CAACgB,IAAI,CAAC,IAAI,CAAClB,KAAK,EAAEe,KAAK,EAAET,QAAQ,CAACP,IAAI,CAAC;QAC3C,IAAI,CAACc,SAAS,CAAC,CAAC;MAClB,EAAE,OAAOL,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACD,MAAMW,UAAUA,CAACjB,EAAE,EAAE;MACnB,IAAI;QACF,MAAML,WAAW,CAACsB,UAAU,CAACjB,EAAE,CAAC;QAChC,IAAI,CAACF,KAAI,GAAI,IAAI,CAACA,KAAK,CAACoB,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACf,EAAC,KAAMA,EAAE,CAAC;MAC1D,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDa,QAAQA,CAACJ,IAAI,EAAE;MACb,IAAI,CAAChB,QAAO,GAAI;QAAE,GAAGgB;MAAK,CAAC;MAC3B,IAAI,CAACb,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDS,SAASA,CAAA,EAAG;MACV,IAAI,CAACZ,QAAO,GAAI;QACdC,EAAE,EAAE,IAAI;QACRJ,IAAI,EAAE,EAAE;QACRK,KAAK,EAAE;MACT,CAAC;MACD,IAAI,CAACC,SAAQ,GAAI,KAAK;IACxB,CAAC;IACDkB,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,OAAO,CAACX,IAAI,CAAC;QAAEd,IAAI,EAAE;MAAiB,CAAC,CAAC;IAC/C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}