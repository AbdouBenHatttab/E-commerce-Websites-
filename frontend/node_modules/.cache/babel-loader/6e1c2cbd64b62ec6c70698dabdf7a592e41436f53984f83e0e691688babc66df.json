{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport UserService from \"@/services/UserService\";\nexport default {\n  data() {\n    return {\n      users: []\n    };\n  },\n  async created() {\n    const response = await UserService.getAllUsers();\n    this.users = response.data;\n  },\n  methods: {\n    async deleteUser(id) {\n      await UserService.deleteUser(id);\n      this.users = this.users.filter(user => user.id !== id);\n    },\n    goBack() {\n      this.$router.push({\n        name: \"AdminDashboard\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["UserService","data","users","created","response","getAllUsers","methods","deleteUser","id","filter","user","goBack","$router","push","name"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\admin\\AdminUsers.vue"],"sourcesContent":["<!-- src/components/admin/AdminUsers.vue -->\n<template>\n  <div class=\"container mt-5\">\n    <h2>Manage Users</h2>\n    <table class=\"table mt-3\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Role</th>\n          <th>Status</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"user in users\" :key=\"user.id\">\n          <td>{{ user.id }}</td>\n          <td>{{ user.name }}</td>\n          <td>{{ user.email }}</td>\n          <td>{{ user.role }}</td>\n          <td>{{ user.status }}</td>\n          <td>\n            <button class=\"btn btn-danger btn-sm\" @click=\"deleteUser(user.id)\">\n              Delete\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <button class=\"btn btn-secondary mt-3\" @click=\"goBack\">Back</button>\n  </div>\n</template>\n\n<script>\nimport UserService from \"@/services/UserService\";\n\nexport default {\n  data() {\n    return {\n      users: [],\n    };\n  },\n  async created() {\n    const response = await UserService.getAllUsers();\n    this.users = response.data;\n  },\n  methods: {\n    async deleteUser(id) {\n      await UserService.deleteUser(id);\n      this.users = this.users.filter((user) => user.id !== id);\n    },\n    goBack() {\n      this.$router.push({ name: \"AdminDashboard\" });\n    },\n  },\n};\n</script>\n"],"mappings":";;;AAmCA,OAAOA,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,QAAO,GAAI,MAAMJ,WAAW,CAACK,WAAW,CAAC,CAAC;IAChD,IAAI,CAACH,KAAI,GAAIE,QAAQ,CAACH,IAAI;EAC5B,CAAC;EACDK,OAAO,EAAE;IACP,MAAMC,UAAUA,CAACC,EAAE,EAAE;MACnB,MAAMR,WAAW,CAACO,UAAU,CAACC,EAAE,CAAC;MAChC,IAAI,CAACN,KAAI,GAAI,IAAI,CAACA,KAAK,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAC,KAAMA,EAAE,CAAC;IAC1D,CAAC;IACDG,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAiB,CAAC,CAAC;IAC/C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}