{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ProductService from '@/services/ProductService';\nimport CartService from '@/services/CartService';\nexport default {\n  name: 'ProductDetail',\n  props: ['id'],\n  data() {\n    return {\n      product: null\n    };\n  },\n  computed: {\n    productSpecs() {\n      if (!this.product) return [];\n      return [{\n        label: 'Category',\n        value: this.product.category\n      }, {\n        label: 'Stock',\n        value: `${this.product.stock} available`\n      }];\n    }\n  },\n  async created() {\n    try {\n      const response = await ProductService.getProductById(this.id);\n      this.product = response.data;\n    } catch (error) {\n      console.error('Error fetching product:', error);\n      this.$router.replace('/products');\n    }\n  },\n  methods: {\n    async addToCart() {\n      try {\n        await CartService.addToCart(this.product.id, 1);\n        window.alert('Product added to cart!');\n      } catch (error) {\n        console.error('Error adding to cart:', error.response?.data || error.message);\n        window.alert(error.response?.data?.message || 'Failed to add to cart');\n        if (error.response?.status === 401) {\n          this.$router.push('/login');\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["ProductService","CartService","name","props","data","product","computed","productSpecs","label","value","category","stock","created","response","getProductById","id","error","console","$router","replace","methods","addToCart","window","alert","message","status","push"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\final\\hello-word-vue\\src\\components\\user\\ProductDetail.vue"],"sourcesContent":["<template>\n  <div class=\"container py-5\">\n    <div v-if=\"product\" class=\"card shadow-lg border-0 overflow-hidden\">\n      <!-- Product Content -->\n      <div class=\"row g-0\">\n        <!-- Image Section -->\n        <div class=\"col-lg-6 position-relative\">\n          <img\n            :src=\"product.imageUrl\"\n            class=\"img-fluid rounded-start object-fit-cover h-100\"\n            alt=\"Product image\"\n            style=\"min-height: 300px; max-height: 500px\"\n          />\n          <div class=\"position-absolute top-0 start-0 m-3\">\n            <span class=\"badge bg-danger fs-6\">-{{ discountPercentage }}%</span>\n          </div>\n        </div>\n\n        <!-- Details Section -->\n        <div class=\"col-lg-6\">\n          <div class=\"card-body p-4 p-xl-5\">\n            <!-- Product Info -->\n            <h1 class=\"mb-3\">{{ product.name }}</h1>\n\n            <!-- Rating -->\n            <!-- <div class=\"d-flex align-items-center mb-4\">\n              <div class=\"rating-stars me-3\">\n                <i\n                  v-for=\"star in 5\"\n                  :key=\"star\"\n                  class=\"bi bi-star-fill me-1\"\n                  :class=\"\n                    star <= product.rating ? 'text-warning' : 'text-muted'\n                  \"\n                ></i>\n              </div>\n              <span class=\"text-muted\"\n                >({{ product.reviews || 0 }} reviews)</span\n              >\n            </div> -->\n\n            <!-- Price -->\n            <div class=\"d-flex align-items-baseline gap-3 mb-4\">\n              <h2 class=\"text-primary\">${{ product.price }}</h2>\n            </div>\n\n            <!-- Specifications -->\n            <div class=\"row g-3 mb-4\">\n              <div\n                class=\"col-md-6\"\n                v-for=\"(spec, index) in productSpecs\"\n                :key=\"index\"\n              >\n                <div class=\"bg-light p-3 rounded\">\n                  <span class=\"text-muted d-block small\">{{ spec.label }}</span>\n                  <strong>{{ spec.value }}</strong>\n                </div>\n              </div>\n            </div>\n\n            <!-- Description -->\n            <div class=\"mb-4\">\n              <h4 class=\"mb-3\">Description</h4>\n              <p class=\"text-muted\" style=\"white-space: pre-wrap\">\n                {{ product.description }}\n              </p>\n            </div>\n\n            <!-- Add to Cart -->\n            <div class=\"d-grid gap-3\">\n              <button class=\"btn btn-primary btn-lg py-3\" @click=\"addToCart\">\n                <i class=\"bi bi-cart-plus me-2\"></i>Add to Cart\n              </button>\n              <button class=\"btn btn-outline-secondary\" @click=\"$router.go(-1)\">\n                <i class=\"bi bi-arrow-left me-2\"></i>Continue Shopping\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Loading State -->\n    <div v-else class=\"text-center py-5\">\n      <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n      <p class=\"mt-3 text-muted\">Loading product details...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ProductService from '@/services/ProductService';\nimport CartService from '@/services/CartService';\n\nexport default {\n  name: 'ProductDetail',\n  props: ['id'],\n  data() {\n    return {\n      product: null,\n    };\n  },\n  computed: {\n    productSpecs() {\n      if (!this.product) return [];\n      return [\n        { label: 'Category', value: this.product.category },\n        { label: 'Stock', value: `${this.product.stock} available` },\n      ];\n    },\n  },\n  async created() {\n    try {\n      const response = await ProductService.getProductById(this.id);\n      this.product = response.data;\n    } catch (error) {\n      console.error('Error fetching product:', error);\n      this.$router.replace('/products');\n    }\n  },\n  methods: {\n    async addToCart() {\n      try {\n        await CartService.addToCart(this.product.id, 1);\n        window.alert('Product added to cart!');\n      } catch (error) {\n        console.error(\n          'Error adding to cart:',\n          error.response?.data || error.message\n        );\n        window.alert(error.response?.data?.message || 'Failed to add to cart');\n        if (error.response?.status === 401) {\n          this.$router.push('/login');\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.object-fit-cover {\n  margin-top: auto;\n  margin-left: 50px;\n  object-fit: cover;\n}\n\n.rating-stars {\n  font-size: 1.25rem;\n}\n\n.card {\n  border-radius: 1rem;\n  overflow: hidden;\n}\n\n.badge {\n  font-size: 1rem;\n  padding: 0.5em 0.75em;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.bg-light {\n  background-color: #f8f9fa !important;\n}\n\n.spinner-border {\n  width: 3rem;\n  height: 3rem;\n}\n</style>\n"],"mappings":";AA6FA,OAAOA,cAAa,MAAO,2BAA2B;AACtD,OAAOC,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,IAAI,CAAC,IAAI,CAACF,OAAO,EAAE,OAAO,EAAE;MAC5B,OAAO,CACL;QAAEG,KAAK,EAAE,UAAU;QAAEC,KAAK,EAAE,IAAI,CAACJ,OAAO,CAACK;MAAS,CAAC,EACnD;QAAEF,KAAK,EAAE,OAAO;QAAEC,KAAK,EAAE,GAAG,IAAI,CAACJ,OAAO,CAACM,KAAK;MAAa,CAAC,CAC7D;IACH;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMb,cAAc,CAACc,cAAc,CAAC,IAAI,CAACC,EAAE,CAAC;MAC7D,IAAI,CAACV,OAAM,GAAIQ,QAAQ,CAACT,IAAI;IAC9B,EAAE,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,IAAI,CAACE,OAAO,CAACC,OAAO,CAAC,WAAW,CAAC;IACnC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMpB,WAAW,CAACoB,SAAS,CAAC,IAAI,CAAChB,OAAO,CAACU,EAAE,EAAE,CAAC,CAAC;QAC/CO,MAAM,CAACC,KAAK,CAAC,wBAAwB,CAAC;MACxC,EAAE,OAAOP,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CACX,uBAAuB,EACvBA,KAAK,CAACH,QAAQ,EAAET,IAAG,IAAKY,KAAK,CAACQ,OAChC,CAAC;QACDF,MAAM,CAACC,KAAK,CAACP,KAAK,CAACH,QAAQ,EAAET,IAAI,EAAEoB,OAAM,IAAK,uBAAuB,CAAC;QACtE,IAAIR,KAAK,CAACH,QAAQ,EAAEY,MAAK,KAAM,GAAG,EAAE;UAClC,IAAI,CAACP,OAAO,CAACQ,IAAI,CAAC,QAAQ,CAAC;QAC7B;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}