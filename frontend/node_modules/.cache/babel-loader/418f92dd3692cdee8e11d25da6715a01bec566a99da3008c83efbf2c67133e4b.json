{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AuthService from '@/services/AuthService';\nexport default {\n  name: 'NavBar',\n  data() {\n    return {\n      user: AuthService.getUser()\n    };\n  },\n  computed: {\n    isAdmin() {\n      return this.user && this.user.role === 'ROLE_ADMIN';\n    },\n    isUser() {\n      return this.user && this.user.role === 'ROLE_USER';\n    },\n    profileLink() {\n      // Choose profile route based on role\n      if (this.isAdmin) return '/admin/profile';\n      if (this.isUser) return '/user/profile';\n      return '/login';\n    }\n  },\n  methods: {\n    logout() {\n      AuthService.logout();\n      this.user = null;\n      this.$router.push('/login');\n    }\n  },\n  created() {\n    // Listen for storage changes (if login occurs in another tab, for example)\n    window.addEventListener('storage', () => {\n      this.user = AuthService.getUser();\n    });\n  }\n};","map":{"version":3,"names":["AuthService","name","data","user","getUser","computed","isAdmin","role","isUser","profileLink","methods","logout","$router","push","created","window","addEventListener"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\NavBar.vue"],"sourcesContent":["<template>\r\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <div class=\"container-fluid\">\r\n      <router-link class=\"navbar-brand\" to=\"/\">My Ecommerce</router-link>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul class=\"navbar-nav me-auto\">\r\n          <!-- Public Link (always visible) -->\r\n          <li class=\"nav-item\">\r\n            <router-link class=\"nav-link\" to=\"/\">Home</router-link>\r\n          </li>\r\n          <!-- Role-based Links -->\r\n          <template v-if=\"user\">\r\n            <!-- Common for all logged in users -->\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" :to=\"profileLink\"\r\n                >Profile</router-link\r\n              >\r\n            </li>\r\n            <!-- Admin-only links -->\r\n            <template v-if=\"isAdmin\">\r\n              <li class=\"nav-item\">\r\n                <router-link class=\"nav-link\" to=\"/admin/dashboard\"\r\n                  >Admin Dashboard</router-link\r\n                >\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <router-link class=\"nav-link\" to=\"/admin/users\"\r\n                  >Manage Users</router-link\r\n                >\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <router-link class=\"nav-link\" to=\"/admin/products\"\r\n                  >Manage Products</router-link\r\n                >\r\n              </li>\r\n            </template>\r\n            <!-- User-only links -->\r\n            <template v-else-if=\"isUser\">\r\n              <li class=\"nav-item\">\r\n                <router-link class=\"nav-link\" to=\"/user/dashboard\"\r\n                  >Dashboard</router-link\r\n                >\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <router-link class=\"nav-link\" to=\"/user/products\"\r\n                  >Products</router-link\r\n                >\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <router-link class=\"nav-link\" to=\"/user/cart\"\r\n                  >My Cart</router-link\r\n                >\r\n              </li>\r\n            </template>\r\n          </template>\r\n        </ul>\r\n        <ul class=\"navbar-nav\">\r\n          <!-- If no user logged in, show Login/Register -->\r\n          <template v-if=\"!user\">\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" to=\"/login\">Login</router-link>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" to=\"/register\"\r\n                >Register</router-link\r\n              >\r\n            </li>\r\n          </template>\r\n          <!-- If user is logged in, show Logout -->\r\n          <template v-else>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\" @click.prevent=\"logout\">Logout</a>\r\n            </li>\r\n          </template>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\nimport AuthService from '@/services/AuthService';\r\n\r\nexport default {\r\n  name: 'NavBar',\r\n  data() {\r\n    return {\r\n      user: AuthService.getUser(),\r\n    };\r\n  },\r\n  computed: {\r\n    isAdmin() {\r\n      return this.user && this.user.role === 'ROLE_ADMIN';\r\n    },\r\n    isUser() {\r\n      return this.user && this.user.role === 'ROLE_USER';\r\n    },\r\n    profileLink() {\r\n      // Choose profile route based on role\r\n      if (this.isAdmin) return '/admin/profile';\r\n      if (this.isUser) return '/user/profile';\r\n      return '/login';\r\n    },\r\n  },\r\n  methods: {\r\n    logout() {\r\n      AuthService.logout();\r\n      this.user = null;\r\n      this.$router.push('/login');\r\n    },\r\n  },\r\n  created() {\r\n    // Listen for storage changes (if login occurs in another tab, for example)\r\n    window.addEventListener('storage', () => {\r\n      this.user = AuthService.getUser();\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.navbar-brand {\r\n  font-weight: 700;\r\n  font-size: 1.5rem;\r\n}\r\n</style>\r\n"],"mappings":";AA4FA,OAAOA,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAEH,WAAW,CAACI,OAAO,CAAC;IAC5B,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACH,IAAG,IAAK,IAAI,CAACA,IAAI,CAACI,IAAG,KAAM,YAAY;IACrD,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACL,IAAG,IAAK,IAAI,CAACA,IAAI,CAACI,IAAG,KAAM,WAAW;IACpD,CAAC;IACDE,WAAWA,CAAA,EAAG;MACZ;MACA,IAAI,IAAI,CAACH,OAAO,EAAE,OAAO,gBAAgB;MACzC,IAAI,IAAI,CAACE,MAAM,EAAE,OAAO,eAAe;MACvC,OAAO,QAAQ;IACjB;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACPX,WAAW,CAACW,MAAM,CAAC,CAAC;MACpB,IAAI,CAACR,IAAG,GAAI,IAAI;MAChB,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACAC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE,MAAM;MACvC,IAAI,CAACb,IAAG,GAAIH,WAAW,CAACI,OAAO,CAAC,CAAC;IACnC,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}