{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ProductService from '@/services/ProductService';\nexport default {\n  name: 'HomePage',\n  data() {\n    return {\n      categories: []\n    };\n  },\n  methods: {\n    async fetchCategories() {\n      try {\n        const response = await ProductService.getAllCategories();\n        // Expect an array of category names from the backend\n        this.categories = response.data;\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    },\n    getCategoryImage(category) {\n      // Map category names to image filenames (ensure these images are in your public folder)\n      const mapping = {\n        Laptop: 'laptop.jpg',\n        Mobile: 'mobile.jpg',\n        'Mens Fashion': 'mens-fashion.jpg',\n        'Women Fashion': 'women.jpg'\n      };\n      return mapping[category] || 'default.jpg';\n    },\n    goToAdmin() {\n      // Redirect to login with role query parameter for Admin\n      this.$router.push({\n        name: 'Login',\n        query: {\n          role: 'ADMIN'\n        }\n      });\n    },\n    goToUser() {\n      // Redirect to login with role query parameter for User\n      this.$router.push({\n        name: 'Login',\n        query: {\n          role: 'USER'\n        }\n      });\n    }\n  },\n  created() {\n    this.fetchCategories();\n  }\n};","map":{"version":3,"names":["ProductService","name","data","categories","methods","fetchCategories","response","getAllCategories","error","console","getCategoryImage","category","mapping","Laptop","Mobile","goToAdmin","$router","push","query","role","goToUser","created"],"sources":["C:\\Users\\Hedib\\OneDrive\\Bureau\\hello-word-vue\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Role Selection Section -->\n    <div class=\"py-3 py-md-5 bg-light\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <h4 class=\"mb-4\">Select Your Interface</h4>\n          </div>\n          <div class=\"col-md-6\">\n            <div class=\"card p-4 text-center\" @click=\"goToAdmin\">\n              <h2>Admin Interface</h2>\n              <p>Access admin dashboard, manage users and products.</p>\n            </div>\n          </div>\n          <div class=\"col-md-6\">\n            <div class=\"card p-4 text-center\" @click=\"goToUser\">\n              <h2>User Interface</h2>\n              <p>Browse products, manage your cart and profile.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Product Categories Section -->\n    <div class=\"py-3 py-md-5 bg-white\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <h4 class=\"mb-4\">Our Categories</h4>\n          </div>\n          <div\n            class=\"col-6 col-md-3\"\n            v-for=\"category in categories\"\n            :key=\"category\"\n          >\n            <div class=\"category-card\">\n              <router-link\n                :to=\"{ name: 'ProductList', query: { category: category } }\"\n              >\n                <div class=\"category-card-img\">\n                  <img\n                    :src=\"getCategoryImage(category)\"\n                    class=\"w-100\"\n                    :alt=\"category\"\n                  />\n                </div>\n                <div class=\"category-card-body\">\n                  <h5>{{ category }}</h5>\n                </div>\n              </router-link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ProductService from '@/services/ProductService';\n\nexport default {\n  name: 'HomePage',\n  data() {\n    return {\n      categories: [],\n    };\n  },\n  methods: {\n    async fetchCategories() {\n      try {\n        const response = await ProductService.getAllCategories();\n        // Expect an array of category names from the backend\n        this.categories = response.data;\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    },\n    getCategoryImage(category) {\n      // Map category names to image filenames (ensure these images are in your public folder)\n      const mapping = {\n        Laptop: 'laptop.jpg',\n        Mobile: 'mobile.jpg',\n        'Mens Fashion': 'mens-fashion.jpg',\n        'Women Fashion': 'women.jpg',\n      };\n      return mapping[category] || 'default.jpg';\n    },\n    goToAdmin() {\n      // Redirect to login with role query parameter for Admin\n      this.$router.push({ name: 'Login', query: { role: 'ADMIN' } });\n    },\n    goToUser() {\n      // Redirect to login with role query parameter for User\n      this.$router.push({ name: 'Login', query: { role: 'USER' } });\n    },\n  },\n  created() {\n    this.fetchCategories();\n  },\n};\n</script>\n\n<style scoped>\n/* Role Selection Cards */\n.card {\n  cursor: pointer;\n  transition: transform 0.2s;\n  margin-bottom: 24px;\n}\n.card:hover {\n  transform: scale(1.05);\n}\n\n/* Category Cards (from provided template) */\n.category-card {\n  border: 1px solid #ddd;\n  box-shadow: 0 0.125rem 0.25rem rgb(0 0 0 / 8%);\n  margin-bottom: 24px;\n  background-color: #fff;\n  transition: transform 0.2s;\n}\n.category-card:hover {\n  transform: scale(1.05);\n}\n.category-card a {\n  text-decoration: none;\n}\n.category-card .category-card-img {\n  max-height: 260px;\n  overflow: hidden;\n  border-bottom: 1px solid #ccc;\n}\n.category-card .category-card-body {\n  padding: 10px 16px;\n}\n.category-card .category-card-body h5 {\n  margin-bottom: 0px;\n  font-size: 18px;\n  font-weight: 600;\n  color: #000;\n  text-align: center;\n}\n</style>\n"],"mappings":";AA6DA,OAAOA,cAAa,MAAO,2BAA2B;AAEtD,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMN,cAAc,CAACO,gBAAgB,CAAC,CAAC;QACxD;QACA,IAAI,CAACJ,UAAS,GAAIG,QAAQ,CAACJ,IAAI;MACjC,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDE,gBAAgBA,CAACC,QAAQ,EAAE;MACzB;MACA,MAAMC,OAAM,GAAI;QACdC,MAAM,EAAE,YAAY;QACpBC,MAAM,EAAE,YAAY;QACpB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE;MACnB,CAAC;MACD,OAAOF,OAAO,CAACD,QAAQ,KAAK,aAAa;IAC3C,CAAC;IACDI,SAASA,CAAA,EAAG;MACV;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEhB,IAAI,EAAE,OAAO;QAAEiB,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAQ;MAAE,CAAC,CAAC;IAChE,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT;MACA,IAAI,CAACJ,OAAO,CAACC,IAAI,CAAC;QAAEhB,IAAI,EAAE,OAAO;QAAEiB,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAO;MAAE,CAAC,CAAC;IAC/D;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAAChB,eAAe,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}